 .d8888b.                                       88888888888                888                         888     888  .d8888b.  
d88P  Y88b                                          888                    888                         888     888 d88P  Y88b 
888    888                                          888                    888                         888     888        888 
888         8888b.  88888b.d88b.   .d88b.           888   .d88b.  .d8888b  888888 .d88b.  888d888      Y88b   d88P      .d88P 
888  88888     "88b 888 "888 "88b d8P  Y8b          888  d8P  Y8b 88K      888   d8P  Y8b 888P"         Y88b d88P   .od888P"  
888    888 .d888888 888  888  888 88888888          888  88888888 "Y8888b. 888   88888888 888            Y88o88P   d88P"      
Y88b  d88P 888  888 888  888  888 Y8b.              888  Y8b.          X88 Y88b. Y8b.     888             Y888P    888"       
 "Y8888P88 "Y888888 888  888  888  "Y8888           888   "Y8888   88888P'  "Y888 "Y8888  888              Y8P     888888888  
                                                                                                                              
                                                                                                                              
                                                                                                                              
 .d8888b.  888               d8b      Y88b   d88P       888                       888               888                       
d88P  Y88b 888               Y8P       Y88b d88P        888                       888               888                       
Y88b.      888                          Y88o88P         888                       888               888                       
 "Y888b.   88888b.   8888b.  888         Y888P  .d88b.  88888b.   .d88b. 88888888 888  888  .d88b.  888                       
    "Y88b. 888 "88b     "88b 888          888  d8P  Y8b 888 "88b d8P  Y8b   d88P  888 .88P d8P  Y8b 888                       
      "888 888  888 .d888888 888          888  88888888 888  888 88888888  d88P   888888K  88888888 888                       
Y88b  d88P 888  888 888  888 888          888  Y8b.     888  888 Y8b.     d88P    888 "88b Y8b.     888                       
 "Y8888P"  888  888 "Y888888 888          888   "Y8888  888  888  "Y8888 88888888 888  888  "Y8888  888                       
                                                                                                                              
                                                                                                                              
                                                                                                                              
 .d8888b.  888               888 888               8888888888                                d8b                              
d88P  Y88b 888               888 888               888                                       Y8P                              
Y88b.      888               888 888               888                                                                        
 "Y888b.   88888b.   .d88b.  888 888 888  888      8888888 888d888 8888b.  88888b.   .d8888b 888 .d8888b                      
    "Y88b. 888 "88b d8P  Y8b 888 888 888  888      888     888P"      "88b 888 "88b d88P"    888 88K                          
      "888 888  888 88888888 888 888 888  888      888     888    .d888888 888  888 888      888 "Y8888b.                     
Y88b  d88P 888  888 Y8b.     888 888 Y88b 888      888     888    888  888 888  888 Y88b.    888      X88                     
 "Y8888P"  888  888  "Y8888  888 888  "Y88888      888     888    "Y888888 888  888  "Y8888P 888  88888P'                     
                                          888                                                                                 
                                     Y8b d88P                                                                                 
                                      "Y88P"                                                                                  
0 - Create Game
1 - Destroy Game
2 - Copy Game
3 - Assign Game
4 - Add Character
5 - Make Character
6 - Move
7 - Attack
8 - Reload
9 - Is over
10 - Print Game
11 - Run test cases
12 - Quit
Please select option: ------example 1------
*****************
| | | | | | | | |
| |M| | |N| | | |
| | | | | | | | |
| | | | | | | | |
| | | | | | | | |
| | | | | | | | |
| |s| | |m| | | |
| | | | | | | | |
*****************
*****************
| | | | | | | | |
| | |M| |N| | | |
| | | | | | | | |
| | | | | | | | |
| | | | | | | | |
| | | | | | | | |
| |s| | |m| | | |
| | | | | | | | |
*****************
A game related error has occurred: IllegalTarget
A game related error has occurred: OutOfRange
*****************
| | | | | | | | |
| | |M| | | | | |
| | | | | | | | |
| | |N| | | | | |
| | | | | | | | |
| | | | | | | | |
| |s| | |m| | | |
| | | | | | | | |
*****************
A game related error has occurred: CellEmpty
*****************
| | | | | | | | |
| | |M| | | | | |
| | | | | | | | |
| | |N| | | | | |
| | |s| | | | | |
| | | | | | | | |
| | | | |m| | | |
| | | | | | | | |
*****************
A game related error has occurred: OutOfRange
*****************
| | | | | | | | |
| | |M| | | | | |
| | | | | | | | |
| | |N| | | | | |
| | | | | | | | |
| | | | | | | | |
| | |s| |m| | | |
| | | | | | | | |
*****************
*****************
| | | | | | | | |
| | |M| | | | | |
| | | | | | | | |
| | |N| | | | | |
| | | | | | | | |
| | | | | | | | |
| | | | |m| | | |
| | | | | | | | |
*****************
A game related error has occurred: CellEmpty
A game related error has occurred: OutOfAmmo
A game related error has occurred: IllegalTarget
isOver: 0
is cpp the winning team? 0
*****************
| | | | | | | | |
| | |M| | | | | |
| | | | | | | | |
| | | | |N| | | |
| | | | | | | | |
| | | | | | | | |
| | | | | | | | |
| | | | | | | | |
*****************
A game related error has occurred: CellEmpty
isOver: 1
is cpp the winning team? 1
------example 2------
*********************
| | | | | | | | | | |
| | | | | | | | | | |
| | | | | | |n| | | |
|S| | | | | |m| |n| |
| | | | | | |m| | | |
*********************
A game related error has occurred: OutOfRange
A game related error has occurred: MoveTooFar
*********************
| | | | | | | | | | |
| | | | | | | | | | |
| | | | | | |n| | | |
|S| | | | | |m| |n| |
| | | | | | |m| | | |
*********************
*********************
| | | | | | | | | | |
| | | | | | | | | | |
| | | | | | |n| | | |
| | | |S| | |m| |n| |
| | | | | | |m| | | |
*********************
*********************
| | | | | | | | | | |
| | | | | | | | | | |
| | | | | | |n| | | |
|S| | | | | |m| |n| |
| | | | | | |m| | | |
*********************
A game related error has occurred: OutOfAmmo
A game related error has occurred: CellEmpty
A game related error has occurred: IllegalCell
A game related error has occurred: IllegalCell
*********************
| | | | | | | | | | |
| | | | | | | | | | |
| | | | | | |n| | | |
| | | |S| | |m| |n| |
| | | | | | |m| | | |
*********************
*********************
| | | | | | | | | | |
| | | | | | | | | | |
| | | | | | |n| | | |
| | | |S| | | | |n| |
| | | | | | |m| | | |
*********************
*********************
| | | | | | | | | | |
| | | | | | | | | | |
| | | | | | |n| | | |
| | | |S| | | | |n| |
| | | | | | |m| | | |
*********************
A game related error has occurred: OutOfAmmo
*********************
| | | | | | | | | | |
| | | | | | | | | | |
| | | | | | |n| | | |
| | | |S| | | | |n| |
| | | | | | | | | | |
*********************
------Game Initializations------
Trying: Game g1(0, 1)
std::exception
Trying: Game g1(1, 0)
std::exception
Trying: Game g1(0, 0)
std::exception
Trying: Game g1(-1, 1)
std::exception
Trying: Game g1(1, -1)
std::exception
Trying: Game g1(-1, -1)
std::exception
------Character Init------
Trying: Game::makeCharacter(CharacterType::MEDIC, Team::CPP, i, 2, 4, 5)
std::exception
Trying: Game::makeCharacter(CharacterType::SNIPER, Team::CPP, i, 2, 4, 5)
std::exception
Trying: Game::makeCharacter(CharacterType::SOLDIER, Team::CPP, i, 2, 4, 5)
std::exception
Trying: Game::makeCharacter(CharacterType::MEDIC, Team::PYTHON, i, 2, 4, 5)
std::exception
Trying: Game::makeCharacter(CharacterType::SNIPER, Team::PYTHON, i, 2, 4, 5)
std::exception
Trying: Game::makeCharacter(CharacterType::SOLDIER, Team::PYTHON, i, 2, 4, 5)
std::exception
Trying: Game::makeCharacter(CharacterType::MEDIC, Team::CPP, i, 2, 4, 5)
std::exception
Trying: Game::makeCharacter(CharacterType::SNIPER, Team::CPP, i, 2, 4, 5)
std::exception
Trying: Game::makeCharacter(CharacterType::SOLDIER, Team::CPP, i, 2, 4, 5)
std::exception
Trying: Game::makeCharacter(CharacterType::MEDIC, Team::PYTHON, i, 2, 4, 5)
std::exception
Trying: Game::makeCharacter(CharacterType::SNIPER, Team::PYTHON, i, 2, 4, 5)
std::exception
Trying: Game::makeCharacter(CharacterType::SOLDIER, Team::PYTHON, i, 2, 4, 5)
std::exception
Trying: Game::makeCharacter(CharacterType::MEDIC, Team::CPP, i, 2, 4, 5)
std::exception
Trying: Game::makeCharacter(CharacterType::SNIPER, Team::CPP, i, 2, 4, 5)
std::exception
Trying: Game::makeCharacter(CharacterType::SOLDIER, Team::CPP, i, 2, 4, 5)
std::exception
Trying: Game::makeCharacter(CharacterType::MEDIC, Team::PYTHON, i, 2, 4, 5)
std::exception
Trying: Game::makeCharacter(CharacterType::SNIPER, Team::PYTHON, i, 2, 4, 5)
std::exception
Trying: Game::makeCharacter(CharacterType::SOLDIER, Team::PYTHON, i, 2, 4, 5)
std::exception
Trying: Game::makeCharacter(CharacterType::MEDIC, Team::CPP, i, 2, 4, 5)
Trying: Game::makeCharacter(CharacterType::SNIPER, Team::CPP, i, 2, 4, 5)
Trying: Game::makeCharacter(CharacterType::SOLDIER, Team::CPP, i, 2, 4, 5)
Trying: Game::makeCharacter(CharacterType::MEDIC, Team::PYTHON, i, 2, 4, 5)
Trying: Game::makeCharacter(CharacterType::SNIPER, Team::PYTHON, i, 2, 4, 5)
Trying: Game::makeCharacter(CharacterType::SOLDIER, Team::PYTHON, i, 2, 4, 5)
Trying: Game::makeCharacter(CharacterType::MEDIC, Team::CPP, i, 2, 4, 5)
Trying: Game::makeCharacter(CharacterType::SNIPER, Team::CPP, i, 2, 4, 5)
Trying: Game::makeCharacter(CharacterType::SOLDIER, Team::CPP, i, 2, 4, 5)
Trying: Game::makeCharacter(CharacterType::MEDIC, Team::PYTHON, i, 2, 4, 5)
Trying: Game::makeCharacter(CharacterType::SNIPER, Team::PYTHON, i, 2, 4, 5)
Trying: Game::makeCharacter(CharacterType::SOLDIER, Team::PYTHON, i, 2, 4, 5)
Trying: Game::makeCharacter(CharacterType::MEDIC, Team::CPP, i, 2, 4, 5)
Trying: Game::makeCharacter(CharacterType::SNIPER, Team::CPP, i, 2, 4, 5)
Trying: Game::makeCharacter(CharacterType::SOLDIER, Team::CPP, i, 2, 4, 5)
Trying: Game::makeCharacter(CharacterType::MEDIC, Team::PYTHON, i, 2, 4, 5)
Trying: Game::makeCharacter(CharacterType::SNIPER, Team::PYTHON, i, 2, 4, 5)
Trying: Game::makeCharacter(CharacterType::SOLDIER, Team::PYTHON, i, 2, 4, 5)
Trying: Game::makeCharacter(CharacterType::MEDIC, Team::CPP, i, 2, 4, 5)
Trying: Game::makeCharacter(CharacterType::SNIPER, Team::CPP, i, 2, 4, 5)
Trying: Game::makeCharacter(CharacterType::SOLDIER, Team::CPP, i, 2, 4, 5)
Trying: Game::makeCharacter(CharacterType::MEDIC, Team::PYTHON, i, 2, 4, 5)
Trying: Game::makeCharacter(CharacterType::SNIPER, Team::PYTHON, i, 2, 4, 5)
Trying: Game::makeCharacter(CharacterType::SOLDIER, Team::PYTHON, i, 2, 4, 5)
Trying: Game::makeCharacter(CharacterType::MEDIC, Team::CPP, 10, i, 4, 5)
std::exception
Trying: Game::makeCharacter(CharacterType::SNIPER, Team::CPP, 10, i, 4, 5)
std::exception
Trying: Game::makeCharacter(CharacterType::SOLDIER, Team::CPP, 10, i, 4, 5)
std::exception
Trying: Game::makeCharacter(CharacterType::MEDIC, Team::PYTHON, 10, i, 4, 5)
std::exception
Trying: Game::makeCharacter(CharacterType::SNIPER, Team::PYTHON, 10, i, 4, 5)
std::exception
Trying: Game::makeCharacter(CharacterType::SOLDIER, Team::PYTHON, 10, i, 4, 5)
std::exception
Trying: Game::makeCharacter(CharacterType::MEDIC, Team::CPP, 10, i, 4, 5)
std::exception
Trying: Game::makeCharacter(CharacterType::SNIPER, Team::CPP, 10, i, 4, 5)
std::exception
Trying: Game::makeCharacter(CharacterType::SOLDIER, Team::CPP, 10, i, 4, 5)
std::exception
Trying: Game::makeCharacter(CharacterType::MEDIC, Team::PYTHON, 10, i, 4, 5)
std::exception
Trying: Game::makeCharacter(CharacterType::SNIPER, Team::PYTHON, 10, i, 4, 5)
std::exception
Trying: Game::makeCharacter(CharacterType::SOLDIER, Team::PYTHON, 10, i, 4, 5)
std::exception
Trying: Game::makeCharacter(CharacterType::MEDIC, Team::CPP, 10, i, 4, 5)
Trying: Game::makeCharacter(CharacterType::SNIPER, Team::CPP, 10, i, 4, 5)
Trying: Game::makeCharacter(CharacterType::SOLDIER, Team::CPP, 10, i, 4, 5)
Trying: Game::makeCharacter(CharacterType::MEDIC, Team::PYTHON, 10, i, 4, 5)
Trying: Game::makeCharacter(CharacterType::SNIPER, Team::PYTHON, 10, i, 4, 5)
Trying: Game::makeCharacter(CharacterType::SOLDIER, Team::PYTHON, 10, i, 4, 5)
Trying: Game::makeCharacter(CharacterType::MEDIC, Team::CPP, 10, i, 4, 5)
Trying: Game::makeCharacter(CharacterType::SNIPER, Team::CPP, 10, i, 4, 5)
Trying: Game::makeCharacter(CharacterType::SOLDIER, Team::CPP, 10, i, 4, 5)
Trying: Game::makeCharacter(CharacterType::MEDIC, Team::PYTHON, 10, i, 4, 5)
Trying: Game::makeCharacter(CharacterType::SNIPER, Team::PYTHON, 10, i, 4, 5)
Trying: Game::makeCharacter(CharacterType::SOLDIER, Team::PYTHON, 10, i, 4, 5)
Trying: Game::makeCharacter(CharacterType::MEDIC, Team::CPP, 10, i, 4, 5)
Trying: Game::makeCharacter(CharacterType::SNIPER, Team::CPP, 10, i, 4, 5)
Trying: Game::makeCharacter(CharacterType::SOLDIER, Team::CPP, 10, i, 4, 5)
Trying: Game::makeCharacter(CharacterType::MEDIC, Team::PYTHON, 10, i, 4, 5)
Trying: Game::makeCharacter(CharacterType::SNIPER, Team::PYTHON, 10, i, 4, 5)
Trying: Game::makeCharacter(CharacterType::SOLDIER, Team::PYTHON, 10, i, 4, 5)
Trying: Game::makeCharacter(CharacterType::MEDIC, Team::CPP, 10, i, 4, 5)
Trying: Game::makeCharacter(CharacterType::SNIPER, Team::CPP, 10, i, 4, 5)
Trying: Game::makeCharacter(CharacterType::SOLDIER, Team::CPP, 10, i, 4, 5)
Trying: Game::makeCharacter(CharacterType::MEDIC, Team::PYTHON, 10, i, 4, 5)
Trying: Game::makeCharacter(CharacterType::SNIPER, Team::PYTHON, 10, i, 4, 5)
Trying: Game::makeCharacter(CharacterType::SOLDIER, Team::PYTHON, 10, i, 4, 5)
Trying: Game::makeCharacter(CharacterType::MEDIC, Team::CPP, 10, i, 4, 5)
Trying: Game::makeCharacter(CharacterType::SNIPER, Team::CPP, 10, i, 4, 5)
Trying: Game::makeCharacter(CharacterType::SOLDIER, Team::CPP, 10, i, 4, 5)
Trying: Game::makeCharacter(CharacterType::MEDIC, Team::PYTHON, 10, i, 4, 5)
Trying: Game::makeCharacter(CharacterType::SNIPER, Team::PYTHON, 10, i, 4, 5)
Trying: Game::makeCharacter(CharacterType::SOLDIER, Team::PYTHON, 10, i, 4, 5)
Trying: Game::makeCharacter(CharacterType::MEDIC, Team::CPP, 10, 2, i, 5)
std::exception
Trying: Game::makeCharacter(CharacterType::SNIPER, Team::CPP, 10, 2, i, 5)
std::exception
Trying: Game::makeCharacter(CharacterType::SOLDIER, Team::CPP, 10, 2, i, 5)
std::exception
Trying: Game::makeCharacter(CharacterType::MEDIC, Team::PYTHON, 10, 2, i, 5)
std::exception
Trying: Game::makeCharacter(CharacterType::SNIPER, Team::PYTHON, 10, 2, i, 5)
std::exception
Trying: Game::makeCharacter(CharacterType::SOLDIER, Team::PYTHON, 10, 2, i, 5)
std::exception
Trying: Game::makeCharacter(CharacterType::MEDIC, Team::CPP, 10, 2, i, 5)
std::exception
Trying: Game::makeCharacter(CharacterType::SNIPER, Team::CPP, 10, 2, i, 5)
std::exception
Trying: Game::makeCharacter(CharacterType::SOLDIER, Team::CPP, 10, 2, i, 5)
std::exception
Trying: Game::makeCharacter(CharacterType::MEDIC, Team::PYTHON, 10, 2, i, 5)
std::exception
Trying: Game::makeCharacter(CharacterType::SNIPER, Team::PYTHON, 10, 2, i, 5)
std::exception
Trying: Game::makeCharacter(CharacterType::SOLDIER, Team::PYTHON, 10, 2, i, 5)
std::exception
Trying: Game::makeCharacter(CharacterType::MEDIC, Team::CPP, 10, 2, i, 5)
Trying: Game::makeCharacter(CharacterType::SNIPER, Team::CPP, 10, 2, i, 5)
Trying: Game::makeCharacter(CharacterType::SOLDIER, Team::CPP, 10, 2, i, 5)
Trying: Game::makeCharacter(CharacterType::MEDIC, Team::PYTHON, 10, 2, i, 5)
Trying: Game::makeCharacter(CharacterType::SNIPER, Team::PYTHON, 10, 2, i, 5)
Trying: Game::makeCharacter(CharacterType::SOLDIER, Team::PYTHON, 10, 2, i, 5)
Trying: Game::makeCharacter(CharacterType::MEDIC, Team::CPP, 10, 2, i, 5)
Trying: Game::makeCharacter(CharacterType::SNIPER, Team::CPP, 10, 2, i, 5)
Trying: Game::makeCharacter(CharacterType::SOLDIER, Team::CPP, 10, 2, i, 5)
Trying: Game::makeCharacter(CharacterType::MEDIC, Team::PYTHON, 10, 2, i, 5)
Trying: Game::makeCharacter(CharacterType::SNIPER, Team::PYTHON, 10, 2, i, 5)
Trying: Game::makeCharacter(CharacterType::SOLDIER, Team::PYTHON, 10, 2, i, 5)
Trying: Game::makeCharacter(CharacterType::MEDIC, Team::CPP, 10, 2, i, 5)
Trying: Game::makeCharacter(CharacterType::SNIPER, Team::CPP, 10, 2, i, 5)
Trying: Game::makeCharacter(CharacterType::SOLDIER, Team::CPP, 10, 2, i, 5)
Trying: Game::makeCharacter(CharacterType::MEDIC, Team::PYTHON, 10, 2, i, 5)
Trying: Game::makeCharacter(CharacterType::SNIPER, Team::PYTHON, 10, 2, i, 5)
Trying: Game::makeCharacter(CharacterType::SOLDIER, Team::PYTHON, 10, 2, i, 5)
Trying: Game::makeCharacter(CharacterType::MEDIC, Team::CPP, 10, 2, i, 5)
Trying: Game::makeCharacter(CharacterType::SNIPER, Team::CPP, 10, 2, i, 5)
Trying: Game::makeCharacter(CharacterType::SOLDIER, Team::CPP, 10, 2, i, 5)
Trying: Game::makeCharacter(CharacterType::MEDIC, Team::PYTHON, 10, 2, i, 5)
Trying: Game::makeCharacter(CharacterType::SNIPER, Team::PYTHON, 10, 2, i, 5)
Trying: Game::makeCharacter(CharacterType::SOLDIER, Team::PYTHON, 10, 2, i, 5)
Trying: Game::makeCharacter(CharacterType::MEDIC, Team::CPP, 10, 2, i, 5)
Trying: Game::makeCharacter(CharacterType::SNIPER, Team::CPP, 10, 2, i, 5)
Trying: Game::makeCharacter(CharacterType::SOLDIER, Team::CPP, 10, 2, i, 5)
Trying: Game::makeCharacter(CharacterType::MEDIC, Team::PYTHON, 10, 2, i, 5)
Trying: Game::makeCharacter(CharacterType::SNIPER, Team::PYTHON, 10, 2, i, 5)
Trying: Game::makeCharacter(CharacterType::SOLDIER, Team::PYTHON, 10, 2, i, 5)
Trying: Game::makeCharacter(CharacterType::MEDIC, Team::CPP, 10, 2, 4, i)
std::exception
Trying: Game::makeCharacter(CharacterType::SNIPER, Team::CPP, 10, 2, 4, i)
std::exception
Trying: Game::makeCharacter(CharacterType::SOLDIER, Team::CPP, 10, 2, 4, i)
std::exception
Trying: Game::makeCharacter(CharacterType::MEDIC, Team::PYTHON, 10, 2, 4, i)
std::exception
Trying: Game::makeCharacter(CharacterType::SNIPER, Team::PYTHON, 10, 2, 4, i)
std::exception
Trying: Game::makeCharacter(CharacterType::SOLDIER, Team::PYTHON, 10, 2, 4, i)
std::exception
Trying: Game::makeCharacter(CharacterType::MEDIC, Team::CPP, 10, 2, 4, i)
std::exception
Trying: Game::makeCharacter(CharacterType::SNIPER, Team::CPP, 10, 2, 4, i)
std::exception
Trying: Game::makeCharacter(CharacterType::SOLDIER, Team::CPP, 10, 2, 4, i)
std::exception
Trying: Game::makeCharacter(CharacterType::MEDIC, Team::PYTHON, 10, 2, 4, i)
std::exception
Trying: Game::makeCharacter(CharacterType::SNIPER, Team::PYTHON, 10, 2, 4, i)
std::exception
Trying: Game::makeCharacter(CharacterType::SOLDIER, Team::PYTHON, 10, 2, 4, i)
std::exception
Trying: Game::makeCharacter(CharacterType::MEDIC, Team::CPP, 10, 2, 4, i)
Trying: Game::makeCharacter(CharacterType::SNIPER, Team::CPP, 10, 2, 4, i)
Trying: Game::makeCharacter(CharacterType::SOLDIER, Team::CPP, 10, 2, 4, i)
Trying: Game::makeCharacter(CharacterType::MEDIC, Team::PYTHON, 10, 2, 4, i)
Trying: Game::makeCharacter(CharacterType::SNIPER, Team::PYTHON, 10, 2, 4, i)
Trying: Game::makeCharacter(CharacterType::SOLDIER, Team::PYTHON, 10, 2, 4, i)
Trying: Game::makeCharacter(CharacterType::MEDIC, Team::CPP, 10, 2, 4, i)
Trying: Game::makeCharacter(CharacterType::SNIPER, Team::CPP, 10, 2, 4, i)
Trying: Game::makeCharacter(CharacterType::SOLDIER, Team::CPP, 10, 2, 4, i)
Trying: Game::makeCharacter(CharacterType::MEDIC, Team::PYTHON, 10, 2, 4, i)
Trying: Game::makeCharacter(CharacterType::SNIPER, Team::PYTHON, 10, 2, 4, i)
Trying: Game::makeCharacter(CharacterType::SOLDIER, Team::PYTHON, 10, 2, 4, i)
Trying: Game::makeCharacter(CharacterType::MEDIC, Team::CPP, 10, 2, 4, i)
Trying: Game::makeCharacter(CharacterType::SNIPER, Team::CPP, 10, 2, 4, i)
Trying: Game::makeCharacter(CharacterType::SOLDIER, Team::CPP, 10, 2, 4, i)
Trying: Game::makeCharacter(CharacterType::MEDIC, Team::PYTHON, 10, 2, 4, i)
Trying: Game::makeCharacter(CharacterType::SNIPER, Team::PYTHON, 10, 2, 4, i)
Trying: Game::makeCharacter(CharacterType::SOLDIER, Team::PYTHON, 10, 2, 4, i)
Trying: Game::makeCharacter(CharacterType::MEDIC, Team::CPP, 10, 2, 4, i)
Trying: Game::makeCharacter(CharacterType::SNIPER, Team::CPP, 10, 2, 4, i)
Trying: Game::makeCharacter(CharacterType::SOLDIER, Team::CPP, 10, 2, 4, i)
Trying: Game::makeCharacter(CharacterType::MEDIC, Team::PYTHON, 10, 2, 4, i)
Trying: Game::makeCharacter(CharacterType::SNIPER, Team::PYTHON, 10, 2, 4, i)
Trying: Game::makeCharacter(CharacterType::SOLDIER, Team::PYTHON, 10, 2, 4, i)
Trying: Game::makeCharacter(CharacterType::MEDIC, Team::CPP, 10, 2, 4, i)
Trying: Game::makeCharacter(CharacterType::SNIPER, Team::CPP, 10, 2, 4, i)
Trying: Game::makeCharacter(CharacterType::SOLDIER, Team::CPP, 10, 2, 4, i)
Trying: Game::makeCharacter(CharacterType::MEDIC, Team::PYTHON, 10, 2, 4, i)
Trying: Game::makeCharacter(CharacterType::SNIPER, Team::PYTHON, 10, 2, 4, i)
Trying: Game::makeCharacter(CharacterType::SOLDIER, Team::PYTHON, 10, 2, 4, i)
Trying: Game::makeCharacter(CharacterType::MEDIC, Team::CPP, 0, -1, -1, -1)
std::exception
Trying: Game::makeCharacter(CharacterType::MEDIC, Team::CPP, 0, -1, 4, 3)
std::exception
Trying: Game::makeCharacter(CharacterType::MEDIC, Team::CPP, 0, 2, -1, 3)
std::exception
Trying: Game::makeCharacter(CharacterType::MEDIC, Team::CPP, 0, 2, 4, -1)
std::exception
Trying: Game::makeCharacter(CharacterType::MEDIC, Team::CPP, 3, -1, -1, -1)
std::exception
Trying: Game::makeCharacter(CharacterType::MEDIC, Team::CPP, 3, -1, 3, -1)
std::exception
Trying: Game::makeCharacter(CharacterType::MEDIC, Team::CPP, 3, -1, -1, 3)
std::exception
Trying: Game::makeCharacter(CharacterType::MEDIC, Team::CPP, 3, 3, -1, -1)
std::exception
------Add Character------
Trying: cout << g1
*********
| | | | |
| | | | |
| | | | |
| | | | |
*********Trying: g1.addCharacter(GridPoint(i, j), c2)
std::exception
Trying: cout << g1
*********
| | | | |
| | | | |
| | | | |
| | | | |
*********Trying: g1.addCharacter(GridPoint(i, j), c2)
std::exception
Trying: cout << g1
*********
| | | | |
| | | | |
| | | | |
| | | | |
*********Trying: g1.addCharacter(GridPoint(i, j), c2)
std::exception
Trying: cout << g1
*********
| | | | |
| | | | |
| | | | |
| | | | |
*********Trying: g1.addCharacter(GridPoint(i, j), c2)
std::exception
Trying: cout << g1
*********
| | | | |
| | | | |
| | | | |
| | | | |
*********Trying: g1.addCharacter(GridPoint(i, j), c2)
std::exception
Trying: cout << g1
*********
| | | | |
| | | | |
| | | | |
| | | | |
*********Trying: g1.addCharacter(GridPoint(i, j), c1)
Trying: cout << g1
*********
|N| | | |
| | | | |
| | | | |
| | | | |
*********Trying: g1.addCharacter(GridPoint(i, j), c1)
Trying: cout << g1
*********
|N|N| | |
| | | | |
| | | | |
| | | | |
*********Trying: g1.addCharacter(GridPoint(i, j), c1)
Trying: cout << g1
*********
|N|N|N| |
| | | | |
| | | | |
| | | | |
*********Trying: g1.addCharacter(GridPoint(i, j), c1)
Trying: cout << g1
*********
|N|N|N|N|
| | | | |
| | | | |
| | | | |
*********Trying: g1.addCharacter(GridPoint(i, j), c1)
Trying: cout << g1
*********
|N|N|N|N|
|N| | | |
| | | | |
| | | | |
*********Trying: g1.addCharacter(GridPoint(i, j), c2)
std::exception
Trying: cout << g1
*********
|N|N|N|N|
|N| | | |
| | | | |
| | | | |
*********Trying: g1.addCharacter(GridPoint(i, j), c2)
Trying: cout << g1
*********
|N|N|N|N|
|N|s| | |
| | | | |
| | | | |
*********Trying: g1.addCharacter(GridPoint(i, j), c2)
Trying: cout << g1
*********
|N|N|N|N|
|N|s|s| |
| | | | |
| | | | |
*********Trying: g1.addCharacter(GridPoint(i, j), c2)
Trying: cout << g1
*********
|N|N|N|N|
|N|s|s|s|
| | | | |
| | | | |
*********Trying: g1.addCharacter(GridPoint(i, j), c2)
Trying: cout << g1
*********
|N|N|N|N|
|N|s|s|s|
|s| | | |
| | | | |
*********Trying: g1.addCharacter(GridPoint(i, j), c1)
std::exception
Trying: cout << g1
*********
|N|N|N|N|
|N|s|s|s|
|s| | | |
| | | | |
*********Trying: g1.addCharacter(GridPoint(i, j), c1)
Trying: cout << g1
*********
|N|N|N|N|
|N|s|s|s|
|s|N| | |
| | | | |
*********Trying: g1.addCharacter(GridPoint(i, j), c1)
Trying: cout << g1
*********
|N|N|N|N|
|N|s|s|s|
|s|N|N| |
| | | | |
*********Trying: g1.addCharacter(GridPoint(i, j), c1)
Trying: cout << g1
*********
|N|N|N|N|
|N|s|s|s|
|s|N|N|N|
| | | | |
*********Trying: g1.addCharacter(GridPoint(i, j), c1)
Trying: cout << g1
*********
|N|N|N|N|
|N|s|s|s|
|s|N|N|N|
|N| | | |
*********Trying: g1.addCharacter(GridPoint(i, j), c2)
std::exception
Trying: cout << g1
*********
|N|N|N|N|
|N|s|s|s|
|s|N|N|N|
|N| | | |
*********Trying: g1.addCharacter(GridPoint(i, j), c2)
Trying: cout << g1
*********
|N|N|N|N|
|N|s|s|s|
|s|N|N|N|
|N|s| | |
*********Trying: g1.addCharacter(GridPoint(i, j), c2)
Trying: cout << g1
*********
|N|N|N|N|
|N|s|s|s|
|s|N|N|N|
|N|s|s| |
*********Trying: g1.addCharacter(GridPoint(i, j), c2)
Trying: cout << g1
*********
|N|N|N|N|
|N|s|s|s|
|s|N|N|N|
|N|s|s|s|
*********Trying: g1.addCharacter(GridPoint(i, j), c2)
std::exception
Trying: cout << g1
*********
|N|N|N|N|
|N|s|s|s|
|s|N|N|N|
|N|s|s|s|
*********Trying: g1.addCharacter(GridPoint(i, j), c1)
std::exception
Trying: cout << g1
*********
|N|N|N|N|
|N|s|s|s|
|s|N|N|N|
|N|s|s|s|
*********Trying: g1.addCharacter(GridPoint(i, j), c1)
std::exception
Trying: cout << g1
*********
|N|N|N|N|
|N|s|s|s|
|s|N|N|N|
|N|s|s|s|
*********Trying: g1.addCharacter(GridPoint(i, j), c1)
std::exception
Trying: cout << g1
*********
|N|N|N|N|
|N|s|s|s|
|s|N|N|N|
|N|s|s|s|
*********Trying: g1.addCharacter(GridPoint(i, j), c1)
std::exception
Trying: cout << g1
*********
|N|N|N|N|
|N|s|s|s|
|s|N|N|N|
|N|s|s|s|
*********Trying: g1.addCharacter(GridPoint(i, j), c1)
std::exception
Trying: cout << g1
*********
|N|N|N|N|
|N|s|s|s|
|s|N|N|N|
|N|s|s|s|
*********Trying: g1.addCharacter(GridPoint(i, j), c2)
std::exception
Trying: cout << g1
*********
|N|N|N|N|
|N|s|s|s|
|s|N|N|N|
|N|s|s|s|
*********Trying: g1.addCharacter(GridPoint(i, j), c2)
std::exception
Trying: cout << g1
*********
|N|N|N|N|
|N|s|s|s|
|s|N|N|N|
|N|s|s|s|
*********Trying: g1.addCharacter(GridPoint(i, j), c2)
std::exception
Trying: cout << g1
*********
|N|N|N|N|
|N|s|s|s|
|s|N|N|N|
|N|s|s|s|
*********Trying: g1.addCharacter(GridPoint(i, j), c2)
std::exception
Trying: cout << g1
*********
|N|N|N|N|
|N|s|s|s|
|s|N|N|N|
|N|s|s|s|
*********Trying: g1.addCharacter(GridPoint(i, j), c2)
std::exception
Trying: cout << g1
*********
|N|N|N|N|
|N|s|s|s|
|s|N|N|N|
|N|s|s|s|
*********Trying: g1.addCharacter(GridPoint(i, j), c1)
std::exception
Trying: cout << g1
*********
|N|N|N|N|
|N|s|s|s|
|s|N|N|N|
|N|s|s|s|
*********Trying: g1.addCharacter(GridPoint(i, j), c1)
std::exception
Trying: cout << g1
*********
|N|N|N|N|
|N|s|s|s|
|s|N|N|N|
|N|s|s|s|
*********Trying: g1.addCharacter(GridPoint(i, j), c1)
std::exception
Trying: cout << g1
*********
|N|N|N|N|
|N|s|s|s|
|s|N|N|N|
|N|s|s|s|
*********Trying: g1.addCharacter(GridPoint(i, j), c1)
std::exception
Trying: cout << g1
*********
|N|N|N|N|
|N|s|s|s|
|s|N|N|N|
|N|s|s|s|
*********Trying: g1.addCharacter(GridPoint(i, j), c1)
std::exception
Trying: cout << g1
*********
|N|N|N|N|
|N|s|s|s|
|s|N|N|N|
|N|s|s|s|
*********Trying: g1.addCharacter(GridPoint(i, j), c2)
std::exception
Trying: cout << g1
*********
|N|N|N|N|
|N|s|s|s|
|s|N|N|N|
|N|s|s|s|
*********Trying: g1.addCharacter(GridPoint(i, j), c2)
std::exception
Trying: cout << g1
*********
|N|N|N|N|
|N|s|s|s|
|s|N|N|N|
|N|s|s|s|
*********Trying: g1.addCharacter(GridPoint(i, j), c2)
std::exception
Trying: cout << g1
*********
|N|N|N|N|
|N|s|s|s|
|s|N|N|N|
|N|s|s|s|
*********Trying: g1.addCharacter(GridPoint(i, j), c2)
std::exception
Trying: cout << g1
*********
|N|N|N|N|
|N|s|s|s|
|s|N|N|N|
|N|s|s|s|
*********Trying: g1.addCharacter(GridPoint(i, j), c2)
std::exception
Trying: cout << g1
*********
|N|N|N|N|
|N|s|s|s|
|s|N|N|N|
|N|s|s|s|
*********Trying: g1.addCharacter(GridPoint(i, j), c1)
std::exception
Trying: cout << g1
*********
|N|N|N|N|
|N|s|s|s|
|s|N|N|N|
|N|s|s|s|
*********Trying: g1.addCharacter(GridPoint(i, j), c1)
std::exception
Trying: cout << g1
*********
|N|N|N|N|
|N|s|s|s|
|s|N|N|N|
|N|s|s|s|
*********Trying: g1.addCharacter(GridPoint(i, j), c1)
std::exception
Trying: cout << g1
*********
|N|N|N|N|
|N|s|s|s|
|s|N|N|N|
|N|s|s|s|
*********Trying: g1.addCharacter(GridPoint(i, j), c1)
std::exception
Trying: cout << g1
*********
|N|N|N|N|
|N|s|s|s|
|s|N|N|N|
|N|s|s|s|
*********Trying: g1.addCharacter(GridPoint(i, j), c1)
std::exception
Trying: cout << g1
*********
|N|N|N|N|
|N|s|s|s|
|s|N|N|N|
|N|s|s|s|
*********Trying: g1.addCharacter(GridPoint(i, j), c2)
std::exception
Trying: cout << g1
*********
|N|N|N|N|
|N|s|s|s|
|s|N|N|N|
|N|s|s|s|
*********Trying: g1.addCharacter(GridPoint(i, j), c2)
std::exception
Trying: cout << g1
*********
|N|N|N|N|
|N|s|s|s|
|s|N|N|N|
|N|s|s|s|
*********Trying: g1.addCharacter(GridPoint(i, j), c2)
std::exception
Trying: cout << g1
*********
|N|N|N|N|
|N|s|s|s|
|s|N|N|N|
|N|s|s|s|
*********Trying: g1.addCharacter(GridPoint(i, j), c2)
std::exception
Trying: cout << g1
*********
|N|N|N|N|
|N|s|s|s|
|s|N|N|N|
|N|s|s|s|
*********Trying: g1.addCharacter(GridPoint(i, j), c2)
std::exception
Trying: cout << g1
*********
|N|N|N|N|
|N|s|s|s|
|s|N|N|N|
|N|s|s|s|
*********Trying: g1.addCharacter(GridPoint(i, j), c1)
std::exception
Trying: cout << g1
*********
|N|N|N|N|
|N|s|s|s|
|s|N|N|N|
|N|s|s|s|
*********Trying: g1.addCharacter(GridPoint(i, j), c1)
std::exception
Trying: cout << g1
*********
|N|N|N|N|
|N|s|s|s|
|s|N|N|N|
|N|s|s|s|
*********Trying: g1.addCharacter(GridPoint(i, j), c1)
std::exception
Trying: cout << g1
*********
|N|N|N|N|
|N|s|s|s|
|s|N|N|N|
|N|s|s|s|
*********Trying: g1.addCharacter(GridPoint(i, j), c1)
std::exception
Trying: cout << g1
*********
|N|N|N|N|
|N|s|s|s|
|s|N|N|N|
|N|s|s|s|
*********Trying: g1.addCharacter(GridPoint(i, j), c1)
std::exception
Trying: cout << g1
*********
|N|N|N|N|
|N|s|s|s|
|s|N|N|N|
|N|s|s|s|
*********------Copy And Assignment------
Trying: Game g2 = g1
Trying: Game g3(4, 4)
Trying: g3 = g1
Trying: cout << g1
*********
|N| | | |
| | | | |
| | | | |
| | | | |
*********Trying: cout << g2
*********
|N| | | |
| | | | |
| | | | |
| | | | |
*********Trying: cout << g3
*********
|N| | | |
| | | | |
| | | | |
| | | | |
*********Trying: g1.move(GridPoint(0, 0), GridPoint(0, 1))
Trying: g2.move(GridPoint(0, 0), GridPoint(1, 0))
Trying: g1.move(GridPoint(0, 0), GridPoint(1, 1))
std::exception
Trying: cout << g1
*********
| |N| | |
| | | | |
| | | | |
| | | | |
*********Trying: cout << g2
*********
| | | | |
|N| | | |
| | | | |
| | | | |
*********Trying: cout << g3
*********
|N| | | |
| | | | |
| | | | |
| | | | |
*********------Movement------
Trying: g1.move(GridPoint(i, j - 1), GridPoint(i, j))
std::exception
Trying: cout << g1
*********
|N| | | |
|s|N| | |
| | | | |
| | | |s|
*********Trying: g1.move(GridPoint(i, j - 1), GridPoint(i, j))
std::exception
Trying: cout << g1
*********
|N| | | |
|s|N| | |
| | | | |
| | | |s|
*********Trying: g1.move(GridPoint(i, j - 1), GridPoint(i, j))
std::exception
Trying: cout << g1
*********
|N| | | |
|s|N| | |
| | | | |
| | | |s|
*********Trying: g1.move(GridPoint(i, j - 1), GridPoint(i, j))
std::exception
Trying: cout << g1
*********
|N| | | |
|s|N| | |
| | | | |
| | | |s|
*********Trying: g1.move(GridPoint(i, j - 1), GridPoint(i, j))
std::exception
Trying: cout << g1
*********
|N| | | |
|s|N| | |
| | | | |
| | | |s|
*********Trying: g1.move(GridPoint(i, j - 1), GridPoint(i, j))
std::exception
Trying: cout << g1
*********
|N| | | |
|s|N| | |
| | | | |
| | | |s|
*********Trying: g1.move(GridPoint(i, j - 1), GridPoint(i, j))
Trying: cout << g1
*********
| |N| | |
|s|N| | |
| | | | |
| | | |s|
*********Trying: g1.move(GridPoint(i, j - 1), GridPoint(i, j))
Trying: cout << g1
*********
| | |N| |
|s|N| | |
| | | | |
| | | |s|
*********Trying: g1.move(GridPoint(i, j - 1), GridPoint(i, j))
Trying: cout << g1
*********
| | | |N|
|s|N| | |
| | | | |
| | | |s|
*********Trying: g1.move(GridPoint(i, j - 1), GridPoint(i, j))
std::exception
Trying: cout << g1
*********
| | | |N|
|s|N| | |
| | | | |
| | | |s|
*********Trying: g1.move(GridPoint(i, j - 1), GridPoint(i, j))
std::exception
Trying: cout << g1
*********
| | | |N|
|s|N| | |
| | | | |
| | | |s|
*********Trying: g1.move(GridPoint(i, j - 1), GridPoint(i, j))
std::exception
Trying: cout << g1
*********
| | | |N|
|s|N| | |
| | | | |
| | | |s|
*********Trying: g1.move(GridPoint(i, j - 1), GridPoint(i, j))
Trying: cout << g1
*********
| | | |N|
|s| |N| |
| | | | |
| | | |s|
*********Trying: g1.move(GridPoint(i, j - 1), GridPoint(i, j))
Trying: cout << g1
*********
| | | |N|
|s| | |N|
| | | | |
| | | |s|
*********Trying: g1.move(GridPoint(i, j - 1), GridPoint(i, j))
Trying: cout << g1
*********
| | | |N|
|s| | | |
|N| | | |
| | | |s|
*********Trying: g1.move(GridPoint(i, j - 1), GridPoint(i, j))
std::exception
Trying: cout << g1
*********
| | | |N|
|s| | | |
|N| | | |
| | | |s|
*********Trying: g1.move(GridPoint(i, j - 1), GridPoint(i, j))
Trying: cout << g1
*********
| | | |N|
|s| | | |
| |N| | |
| | | |s|
*********Trying: g1.move(GridPoint(i, j - 1), GridPoint(i, j))
Trying: cout << g1
*********
| | | |N|
|s| | | |
| | |N| |
| | | |s|
*********Trying: g1.move(GridPoint(i, j - 1), GridPoint(i, j))
Trying: cout << g1
*********
| | | |N|
|s| | | |
| | | |N|
| | | |s|
*********Trying: g1.move(GridPoint(i, j - 1), GridPoint(i, j))
Trying: cout << g1
*********
| | | |N|
|s| | | |
| | | | |
|N| | |s|
*********Trying: g1.move(GridPoint(i, j - 1), GridPoint(i, j))
std::exception
Trying: cout << g1
*********
| | | |N|
|s| | | |
| | | | |
|N| | |s|
*********Trying: g1.move(GridPoint(i, j - 1), GridPoint(i, j))
Trying: cout << g1
*********
| | | |N|
|s| | | |
| | | | |
| |N| |s|
*********Trying: g1.move(GridPoint(i, j - 1), GridPoint(i, j))
Trying: cout << g1
*********
| | | |N|
|s| | | |
| | | | |
| | |N|s|
*********Trying: g1.move(GridPoint(i, j - 1), GridPoint(i, j))
std::exception
Trying: cout << g1
*********
| | | |N|
|s| | | |
| | | | |
| | |N|s|
*********Trying: g1.move(GridPoint(i, j - 1), GridPoint(i, j))
std::exception
Trying: cout << g1
*********
| | | |N|
|s| | | |
| | | | |
| | |N|s|
*********Trying: g1.move(GridPoint(i, j - 1), GridPoint(i, j))
std::exception
Trying: cout << g1
*********
| | | |N|
|s| | | |
| | | | |
| | |N|s|
*********Trying: g1.move(GridPoint(i, j - 1), GridPoint(i, j))
std::exception
Trying: cout << g1
*********
| | | |N|
|s| | | |
| | | | |
| | |N|s|
*********Trying: g1.move(GridPoint(i, j - 1), GridPoint(i, j))
std::exception
Trying: cout << g1
*********
| | | |N|
|s| | | |
| | | | |
| | |N|s|
*********Trying: g1.move(GridPoint(i, j - 1), GridPoint(i, j))
std::exception
Trying: cout << g1
*********
| | | |N|
|s| | | |
| | | | |
| | |N|s|
*********Trying: g1.move(GridPoint(i, j - 1), GridPoint(i, j))
std::exception
Trying: cout << g1
*********
| | | |N|
|s| | | |
| | | | |
| | |N|s|
*********Trying: g1.move(GridPoint(j - 1, i), GridPoint(j, i))
std::exception
Trying: cout << g1
*********
|N|s| | |
| |N| | |
| | | | |
| | | |s|
*********Trying: g1.move(GridPoint(j - 1, i), GridPoint(j, i))
std::exception
Trying: cout << g1
*********
|N|s| | |
| |N| | |
| | | | |
| | | |s|
*********Trying: g1.move(GridPoint(j - 1, i), GridPoint(j, i))
std::exception
Trying: cout << g1
*********
|N|s| | |
| |N| | |
| | | | |
| | | |s|
*********Trying: g1.move(GridPoint(j - 1, i), GridPoint(j, i))
std::exception
Trying: cout << g1
*********
|N|s| | |
| |N| | |
| | | | |
| | | |s|
*********Trying: g1.move(GridPoint(j - 1, i), GridPoint(j, i))
std::exception
Trying: cout << g1
*********
|N|s| | |
| |N| | |
| | | | |
| | | |s|
*********Trying: g1.move(GridPoint(j - 1, i), GridPoint(j, i))
std::exception
Trying: cout << g1
*********
|N|s| | |
| |N| | |
| | | | |
| | | |s|
*********Trying: g1.move(GridPoint(j - 1, i), GridPoint(j, i))
Trying: cout << g1
*********
| |s| | |
|N|N| | |
| | | | |
| | | |s|
*********Trying: g1.move(GridPoint(j - 1, i), GridPoint(j, i))
Trying: cout << g1
*********
| |s| | |
| |N| | |
|N| | | |
| | | |s|
*********Trying: g1.move(GridPoint(j - 1, i), GridPoint(j, i))
Trying: cout << g1
*********
| |s| | |
| |N| | |
| | | | |
|N| | |s|
*********Trying: g1.move(GridPoint(j - 1, i), GridPoint(j, i))
std::exception
Trying: cout << g1
*********
| |s| | |
| |N| | |
| | | | |
|N| | |s|
*********Trying: g1.move(GridPoint(j - 1, i), GridPoint(j, i))
std::exception
Trying: cout << g1
*********
| |s| | |
| |N| | |
| | | | |
|N| | |s|
*********Trying: g1.move(GridPoint(j - 1, i), GridPoint(j, i))
std::exception
Trying: cout << g1
*********
| |s| | |
| |N| | |
| | | | |
|N| | |s|
*********Trying: g1.move(GridPoint(j - 1, i), GridPoint(j, i))
Trying: cout << g1
*********
| |s| | |
| | | | |
| |N| | |
|N| | |s|
*********Trying: g1.move(GridPoint(j - 1, i), GridPoint(j, i))
Trying: cout << g1
*********
| |s| | |
| | | | |
| | | | |
|N|N| |s|
*********Trying: g1.move(GridPoint(j - 1, i), GridPoint(j, i))
std::exception
Trying: cout << g1
*********
| |s| | |
| | | | |
| | | | |
|N|N| |s|
*********Trying: g1.move(GridPoint(j - 1, i), GridPoint(j, i))
std::exception
Trying: cout << g1
*********
| |s| | |
| | | | |
| | | | |
|N|N| |s|
*********Trying: g1.move(GridPoint(j - 1, i), GridPoint(j, i))
std::exception
Trying: cout << g1
*********
| |s| | |
| | | | |
| | | | |
|N|N| |s|
*********Trying: g1.move(GridPoint(j - 1, i), GridPoint(j, i))
std::exception
Trying: cout << g1
*********
| |s| | |
| | | | |
| | | | |
|N|N| |s|
*********Trying: g1.move(GridPoint(j - 1, i), GridPoint(j, i))
std::exception
Trying: cout << g1
*********
| |s| | |
| | | | |
| | | | |
|N|N| |s|
*********Trying: g1.move(GridPoint(j - 1, i), GridPoint(j, i))
std::exception
Trying: cout << g1
*********
| |s| | |
| | | | |
| | | | |
|N|N| |s|
*********Trying: g1.move(GridPoint(j - 1, i), GridPoint(j, i))
std::exception
Trying: cout << g1
*********
| |s| | |
| | | | |
| | | | |
|N|N| |s|
*********Trying: g1.move(GridPoint(j - 1, i), GridPoint(j, i))
std::exception
Trying: cout << g1
*********
| |s| | |
| | | | |
| | | | |
|N|N| |s|
*********Trying: g1.move(GridPoint(j - 1, i), GridPoint(j, i))
std::exception
Trying: cout << g1
*********
| |s| | |
| | | | |
| | | | |
|N|N| |s|
*********Trying: g1.move(GridPoint(j - 1, i), GridPoint(j, i))
std::exception
Trying: cout << g1
*********
| |s| | |
| | | | |
| | | | |
|N|N| |s|
*********Trying: g1.move(GridPoint(j - 1, i), GridPoint(j, i))
std::exception
Trying: cout << g1
*********
| |s| | |
| | | | |
| | | | |
|N|N| |s|
*********Trying: g1.move(GridPoint(j - 1, i), GridPoint(j, i))
std::exception
Trying: cout << g1
*********
| |s| | |
| | | | |
| | | | |
|N|N| |s|
*********Trying: g1.move(GridPoint(j - 1, i), GridPoint(j, i))
std::exception
Trying: cout << g1
*********
| |s| | |
| | | | |
| | | | |
|N|N| |s|
*********Trying: g1.move(GridPoint(j - 1, i), GridPoint(j, i))
std::exception
Trying: cout << g1
*********
| |s| | |
| | | | |
| | | | |
|N|N| |s|
*********Trying: g1.move(GridPoint(j - 1, i), GridPoint(j, i))
std::exception
Trying: cout << g1
*********
| |s| | |
| | | | |
| | | | |
|N|N| |s|
*********Trying: g1.move(GridPoint(j - 1, i), GridPoint(j, i))
std::exception
Trying: cout << g1
*********
| |s| | |
| | | | |
| | | | |
|N|N| |s|
*********Trying: g1.move(GridPoint(0, 0), GridPoint(3, 3))
std::exception
Trying: cout << g1
*********
|N| | | |
| | | | |
| | | | |
| | | | |
*********------IsOver------
Trying: std::cout << "isOver: " << g1.isOver(&winning_team1) << std::endl
isOver: 1
Trying: std::cout << "is cpp the winning team? " << (winning_team1 == Team::CPP) << std::endl
is cpp the winning team? 1
Trying: std::cout << "isOver: " << g1.isOver(&winning_team1) << std::endl
isOver: 1
Trying: std::cout << "is cpp the winning team? " << (winning_team1 == Team::CPP) << std::endl
is cpp the winning team? 1
Trying: std::cout << "isOver: " << g1.isOver(&winning_team1) << std::endl
isOver: 1
Trying: std::cout << "is cpp the winning team? " << (winning_team1 == Team::CPP) << std::endl
is cpp the winning team? 0
------Attack------
*************
|M|n|S|m|N|s|
|n|S|m|N|s|M|
|S|m|N|s|M|n|
|m|N|s|M|n|S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
|M|n|S|m|N|s|
|n|S|m|N|s|M|
|S|m|N|s|M|n|
|m|N|s|M|n|S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
*************
|M|n|S|m|N|s|
|n|S|m|N|s|M|
|S|m|N|s|M|n|
|m|N|s|M|n|S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
*************
|M|n|S|m|N|s|
|n|S|m|N|s|M|
|S|m|N|s|M|n|
|m|N|s|M|n|S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
*************
|M|n|S|m|N|s|
|n|S|m|N|s|M|
|S|m|N|s|M|n|
|m|N|s|M|n|S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
*************
|M|n|S|m|N|s|
|n|S|m|N|s|M|
|S|m|N|s|M|n|
|m|N|s|M|n|S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
|M|n|S|m|N|s|
|n|S|m|N|s|M|
|S|m|N|s|M|n|
|m|N|s|M|n|S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
*************
|M|n|S|m|N|s|
|n|S|m|N|s|M|
|S|m|N|s|M|n|
|m|N|s|M|n|S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
*************
|M|n|S|m|N|s|
|n|S|m|N|s|M|
|S|m|N|s|M|n|
|m|N|s|M|n|S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
*************
|M|n|S|m|N|s|
|n|S|m|N|s|M|
|S|m|N|s|M|n|
|m|N|s|M|n|S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
*************
|M|n|S|m|N|s|
|n|S|m|N|s|M|
|S|m|N|s|M|n|
|m|N|s|M|n|S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
|M|n|S|m|N|s|
|n|S|m|N|s|M|
|S|m|N|s|M|n|
|m|N|s|M|n|S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
|M|n|S|m|N|s|
|n|S|m|N|s|M|
|S|m|N|s|M|n|
|m|N|s|M|n|S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
*************
|M|n|S|m|N|s|
|n|S|m|N|s|M|
|S|m|N|s|M|n|
|m|N|s|M|n|S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
|M|n|S|m|N|s|
|n|S|m|N|s|M|
|S|m|N|s|M|n|
|m|N|s|M|n|S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
*************
|M|n|S|m|N|s|
|n|S|m|N|s|M|
|S|m|N|s|M|n|
|m|N|s|M|n|S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
|M|n|S|m|N|s|
|n|S|m|N|s|M|
|S|m|N|s|M|n|
|m|N|s|M|n|S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
|M|n|S|m|N|s|
|n|S|m|N|s|M|
|S|m|N|s|M|n|
|m|N|s|M|n|S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
|M|n|S|m|N|s|
|n|S|m|N|s|M|
|S|m|N|s|M|n|
|m|N|s|M|n|S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
|M|n|S|m|N|s|
|n|S|m|N|s|M|
|S|m|N|s|M|n|
|m|N|s|M|n|S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
*************
|M|n|S|m|N|s|
|n|S|m|N|s|M|
|S|m|N|s|M|n|
|m|N|s|M|n|S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
|M|n|S|m|N|s|
|n|S|m|N|s|M|
|S|m|N|s|M|n|
|m|N|s|M|n|S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
|M|n|S|m|N|s|
|n|S|m|N|s|M|
|S|m|N|s|M|n|
|m|N|s|M|n|S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
|M|n|S|m|N|s|
|n|S|m|N|s|M|
|S|m|N|s|M|n|
|m|N|s|M|n|S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
|M|n|S|m|N|s|
|n|S|m|N|s|M|
|S|m|N|s|M|n|
|m|N|s|M|n|S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
*************
|M|n|S|m|N|s|
|n|S|m|N|s|M|
|S|m|N|s|M|n|
|m|N|s|M|n|S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
|M|n|S|m|N|s|
|n|S|m|N|s|M|
|S|m|N|s|M|n|
|m|N|s|M|n|S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
|M|n|S|m|N|s|
|n|S|m|N|s|M|
|S|m|N|s|M|n|
|m|N|s|M|n|S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
|M|n|S|m|N|s|
|n|S|m|N|s|M|
|S|m|N|s|M|n|
|m|N|s|M|n|S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
|M|n|S|m|N|s|
|n|S|m|N|s|M|
|S|m|N|s|M|n|
|m|N|s|M|n|S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
|M|n|S|m|N|s|
|n|S|m|N|s|M|
|S|m|N|s|M|n|
|m|N|s|M|n|S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
|M|n|S|m|N|s|
|n|S|m|N|s|M|
|S|m|N|s|M|n|
|m|N|s|M|n|S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
|M|n|S|m|N|s|
|n|S|m|N|s|M|
|S|m|N|s|M|n|
|m|N|s|M|n|S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
|M|n|S|m|N|s|
|n|S|m|N|s|M|
|S|m|N|s|M|n|
|m|N|s|M|n|S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
|M|n|S|m|N|s|
|n|S|m|N|s|M|
|S|m|N|s|M|n|
|m|N|s|M|n|S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
|M|n|S|m|N|s|
|n|S|m|N|s|M|
|S|m|N|s|M|n|
|m|N|s|M|n|S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
|M|n|S|m|N|s|
|n|S|m|N|s|M|
|S|m|N|s|M|n|
|m|N|s|M|n|S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
|M|n|S|m|N|s|
|n|S|m|N|s|M|
|S|m|N|s|M|n|
|m|N|s|M|n|S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
|M|n|S|m|N|s|
|n|S|m|N|s|M|
|S|m|N|s|M|n|
|m|N|s|M|n|S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
|M|n|S|m|N|s|
|n|S|m|N|s|M|
|S|m|N|s|M|n|
|m|N|s|M|n|S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
|M|n|S|m|N|s|
|n|S|m|N|s|M|
|S|m|N|s|M|n|
|m|N|s|M|n|S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
*************
|M|n|S|m|N|s|
|n|S|m|N|s|M|
|S|m|N|s|M|n|
|m|N|s|M|n|S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
|M|n|S|m|N|s|
|n|S|m|N|s|M|
|S|m|N|s|M|n|
|m|N|s|M|n|S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
|M|n|S|m|N|s|
|n|S|m|N|s|M|
|S|m|N|s|M|n|
|m|N|s|M|n|S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
|M|n|S|m|N|s|
|n|S|m|N|s|M|
|S|m|N|s|M|n|
|m|N|s|M|n|S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
|M|n|S|m|N|s|
|n|S|m|N|s|M|
|S|m|N|s|M|n|
|m|N|s|M|n|S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
*************
|M|n|S|m|N|s|
|n|S|m|N|s|M|
|S|m|N|s|M|n|
|m|N|s|M|n|S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
|M|n|S|m|N|s|
|n|S|m|N|s|M|
|S|m|N|s|M|n|
|m|N|s|M|n|S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
|M|n|S|m|N|s|
|n|S|m|N|s|M|
|S|m|N|s|M|n|
|m|N|s|M|n|S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
*************
|M|n|S|m|N|s|
|n|S|m|N|s|M|
|S|m|N|s|M|n|
|m|N|s|M|n|S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
|M|n|S|m|N|s|
|n|S|m|N|s|M|
|S|m|N|s|M|n|
|m|N|s|M|n|S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
*************
|M|n|S|m|N|s|
|n|S|m|N|s|M|
|S|m|N|s|M|n|
|m|N|s|M|n|S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
|M|n|S|m|N|s|
|n|S|m|N|s|M|
|S|m|N|s|M|n|
|m|N|s|M|n|S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
|M|n|S|m|N|s|
|n|S|m|N|s|M|
|S|m|N|s|M|n|
|m|N|s|M|n|S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
|M|n|S|m|N|s|
|n|S|m|N|s|M|
|S|m|N|s|M|n|
|m|N|s|M|n|S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
|M|n|S|m|N|s|
|n|S|m|N|s|M|
|S|m|N|s|M|n|
|m|N|s|M|n|S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
|M|n|S|m|N|s|
|n|S|m|N|s|M|
|S|m|N|s|M|n|
|m|N|s|M|n|S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
|M|n|S|m|N|s|
|n|S|m|N|s|M|
|S|m|N|s|M|n|
|m|N|s|M|n|S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
|M|n|S|m|N|s|
|n|S|m|N|s|M|
|S|m|N|s|M|n|
|m|N|s|M|n|S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
|M|n|S|m|N|s|
|n|S|m|N|s|M|
|S|m|N|s|M|n|
|m|N|s|M|n|S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
|M|n|S|m|N|s|
|n|S|m|N|s|M|
|S|m|N|s|M|n|
|m|N|s|M|n|S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
|M|n|S|m|N|s|
|n|S|m|N|s|M|
|S|m|N|s|M|n|
|m|N|s|M|n|S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
|M|n|S|m|N|s|
|n|S|m|N|s|M|
|S|m|N|s|M|n|
|m|N|s|M|n|S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
|M|n|S|m|N|s|
|n|S|m|N|s|M|
|S|m|N|s|M|n|
|m|N|s|M|n|S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
|M|n|S|m|N|s|
|n|S|m|N|s|M|
|S|m|N|s|M|n|
|m|N|s|M|n|S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
|M|n|S|m|N|s|
|n|S|m|N|s|M|
|S|m|N|s|M|n|
|m|N|s|M|n|S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
|M|n|S|m|N|s|
|n|S|m|N|s|M|
|S|m|N|s|M|n|
|m|N|s|M|n|S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
|M|n|S|m|N|s|
|n|S|m|N|s|M|
|S|m|N|s|M|n|
|m|N|s|M|n|S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
|M|n|S|m|N|s|
|n|S|m|N|s|M|
|S|m|N|s|M|n|
|m|N|s|M|n|S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
|M|n|S|m|N|s|
|n|S|m|N|s|M|
|S|m|N|s|M|n|
|m|N|s|M|n|S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
|M|n|S|m|N|s|
|n|S|m|N|s|M|
|S|m|N|s|M|n|
|m|N|s|M|n|S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
|M|n|S|m|N|s|
|n|S|m|N|s|M|
|S|m|N|s|M|n|
|m|N|s|M|n|S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
|M|n|S|m|N|s|
|n|S|m|N|s|M|
|S|m|N|s|M|n|
|m|N|s|M|n|S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
*************
|M| |S|m|N|s|
|n|S|m|N|s|M|
|S|m|N|s|M|n|
|m|N|s|M|n|S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
*************
|M| |S| |N|s|
| |S| |N|s|M|
|S|m|N|s|M|n|
|m|N|s|M|n|S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
*************
|M| |S| |N|s|
| |S| |N|s|M|
|S|m|N|s|M|n|
|m|N|s|M|n|S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
*************
|M| |S| |N|s|
| |S| |N|s|M|
|S|m|N|s|M|n|
|m|N|s|M|n|S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
|M| |S| |N|s|
| |S| |N|s|M|
|S|m|N|s|M|n|
|m|N|s|M|n|S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
|M| |S| |N|s|
| |S| |N|s|M|
|S|m|N|s|M|n|
|m|N|s|M|n|S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
|M| |S| |N|s|
| |S| |N|s|M|
|S|m|N|s|M|n|
|m|N|s|M|n|S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
|M| |S| |N|s|
| |S| |N|s|M|
|S|m|N|s|M|n|
|m|N|s|M|n|S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
|M| |S| |N|s|
| |S| |N|s|M|
|S|m|N|s|M|n|
|m|N|s|M|n|S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
|M| |S| |N|s|
| |S| |N|s|M|
|S|m|N|s|M|n|
|m|N|s|M|n|S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
|M| |S| |N|s|
| |S| |N|s|M|
|S|m|N|s|M|n|
|m|N|s|M|n|S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
|M| |S| |N|s|
| |S| |N|s|M|
|S|m|N|s|M|n|
|m|N|s|M|n|S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
|M| |S| |N|s|
| |S| |N|s|M|
|S|m|N|s|M|n|
|m|N|s|M|n|S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
|M| |S| |N|s|
| |S| |N|s|M|
|S|m|N|s|M|n|
|m|N|s|M|n|S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
|M| |S| |N|s|
| |S| |N|s|M|
|S|m|N|s|M|n|
|m|N|s|M|n|S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
|M| |S| |N|s|
| |S| |N|s|M|
|S|m|N|s|M|n|
|m|N|s|M|n|S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
|M| |S| |N|s|
| |S| |N|s|M|
|S|m|N|s|M|n|
|m|N|s|M|n|S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
|M| |S| |N|s|
| |S| |N|s|M|
|S|m|N|s|M|n|
|m|N|s|M|n|S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
|M| |S| |N|s|
| |S| |N|s|M|
|S|m|N|s|M|n|
|m|N|s|M|n|S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
|M| |S| |N|s|
| |S| |N|s|M|
|S|m|N|s|M|n|
|m|N|s|M|n|S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
|M| |S| |N|s|
| |S| |N|s|M|
|S|m|N|s|M|n|
|m|N|s|M|n|S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
|M| |S| |N|s|
| |S| |N|s|M|
|S|m|N|s|M|n|
|m|N|s|M|n|S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
|M| |S| |N|s|
| |S| |N|s|M|
|S|m|N|s|M|n|
|m|N|s|M|n|S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
|M| |S| |N|s|
| |S| |N|s|M|
|S|m|N|s|M|n|
|m|N|s|M|n|S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
|M| |S| |N|s|
| |S| |N|s|M|
|S|m|N|s|M|n|
|m|N|s|M|n|S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
|M| |S| |N|s|
| |S| |N|s|M|
|S|m|N|s|M|n|
|m|N|s|M|n|S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
|M| |S| |N|s|
| |S| |N|s|M|
|S|m|N|s|M|n|
|m|N|s|M|n|S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
|M| |S| |N|s|
| |S| |N|s|M|
|S|m|N|s|M|n|
|m|N|s|M|n|S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
|M| |S| |N|s|
| |S| |N|s|M|
|S|m|N|s|M|n|
|m|N|s|M|n|S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
|M| |S| |N|s|
| |S| |N|s|M|
|S|m|N|s|M|n|
|m|N|s|M|n|S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
|M| |S| |N|s|
| |S| |N|s|M|
|S|m|N|s|M|n|
|m|N|s|M|n|S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
|M| |S| |N|s|
| |S| |N|s|M|
|S|m|N|s|M|n|
|m|N|s|M|n|S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
|M| |S| |N|s|
| |S| |N|s|M|
|S|m|N|s|M|n|
|m|N|s|M|n|S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
|M| |S| |N|s|
| |S| |N|s|M|
|S|m|N|s|M|n|
|m|N|s|M|n|S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
|M| |S| |N|s|
| |S| |N|s|M|
|S|m|N|s|M|n|
|m|N|s|M|n|S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
|M| |S| |N|s|
| |S| |N|s|M|
|S|m|N|s|M|n|
|m|N|s|M|n|S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
|M| |S| |N|s|
| |S| |N|s|M|
|S|m|N|s|M|n|
|m|N|s|M|n|S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
|M| |S| |N|s|
| |S| |N|s|M|
|S|m|N|s|M|n|
|m|N|s|M|n|S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
|M| |S| |N|s|
| |S| |N|s|M|
|S|m|N|s|M|n|
|m|N|s|M|n|S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
|M| |S| |N|s|
| |S| |N|s|M|
|S|m|N|s|M|n|
|m|N|s|M|n|S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
|M| |S| |N|s|
| |S| |N|s|M|
|S|m|N|s|M|n|
|m|N|s|M|n|S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
|M| |S| |N|s|
| |S| |N|s|M|
|S|m|N|s|M|n|
|m|N|s|M|n|S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
|M| |S| |N|s|
| |S| |N|s|M|
|S|m|N|s|M|n|
|m|N|s|M|n|S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
|M| |S| |N|s|
| |S| |N|s|M|
|S|m|N|s|M|n|
|m|N|s|M|n|S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
|M| |S| |N|s|
| |S| |N|s|M|
|S|m|N|s|M|n|
|m|N|s|M|n|S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
|M| |S| |N|s|
| |S| |N|s|M|
|S|m|N|s|M|n|
|m|N|s|M|n|S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
|M| |S| |N|s|
| |S| |N|s|M|
|S|m|N|s|M|n|
|m|N|s|M|n|S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
|M| |S| |N|s|
| |S| |N|s|M|
|S|m|N|s|M|n|
|m|N|s|M|n|S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
|M| |S| |N|s|
| |S| |N|s|M|
|S|m|N|s|M|n|
|m|N|s|M|n|S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
|M| |S| |N|s|
| |S| |N|s|M|
|S|m|N|s|M|n|
|m|N|s|M|n|S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
|M| |S| |N|s|
| |S| |N|s|M|
|S|m|N|s|M|n|
|m|N|s|M|n|S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
|M| |S| |N|s|
| |S| |N|s|M|
|S|m|N|s|M|n|
|m|N|s|M|n|S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
|M| |S| |N|s|
| |S| |N|s|M|
|S|m|N|s|M|n|
|m|N|s|M|n|S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
|M| |S| |N|s|
| |S| |N|s|M|
|S|m|N|s|M|n|
|m|N|s|M|n|S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
|M| |S| |N|s|
| |S| |N|s|M|
|S|m|N|s|M|n|
|m|N|s|M|n|S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
|M| |S| |N|s|
| |S| |N|s|M|
|S|m|N|s|M|n|
|m|N|s|M|n|S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
|M| |S| |N|s|
| |S| |N|s|M|
|S|m|N|s|M|n|
|m|N|s|M|n|S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
|M| |S| |N|s|
| |S| |N|s|M|
|S|m|N|s|M|n|
|m|N|s|M|n|S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
|M| |S| |N|s|
| |S| |N|s|M|
|S|m|N|s|M|n|
|m|N|s|M|n|S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
|M| |S| |N|s|
| |S| |N|s|M|
|S|m|N|s|M|n|
|m|N|s|M|n|S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
|M| |S| |N|s|
| |S| |N|s|M|
|S|m|N|s|M|n|
|m|N|s|M|n|S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
|M| |S| |N|s|
| |S| |N|s|M|
|S|m|N|s|M|n|
|m|N|s|M|n|S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
|M| |S| |N|s|
| |S| |N|s|M|
|S|m|N|s|M|n|
|m|N|s|M|n|S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
|M| |S| |N|s|
| |S| |N|s|M|
|S|m|N|s|M|n|
|m|N|s|M|n|S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
|M| |S| |N|s|
| |S| |N|s|M|
|S|m|N|s|M|n|
|m|N|s|M|n|S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
|M| |S| |N|s|
| |S| |N|s|M|
|S|m|N|s|M|n|
|m|N|s|M|n|S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
|M| |S| |N|s|
| |S| |N|s|M|
|S|m|N|s|M|n|
|m|N|s|M|n|S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
|M| |S| |N|s|
| |S| |N|s|M|
|S|m|N|s|M|n|
|m|N|s|M|n|S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
|M| |S| |N|s|
| |S| |N|s|M|
|S|m|N|s|M|n|
|m|N|s|M|n|S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
|M| |S| |N|s|
| |S| |N|s|M|
|S|m|N|s|M|n|
|m|N|s|M|n|S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
|M| |S| |N|s|
| |S| |N|s|M|
|S|m|N|s|M|n|
|m|N|s|M|n|S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
|M| |S| |N|s|
| |S| |N|s|M|
|S|m|N|s|M|n|
|m|N|s|M|n|S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
|M| |S| |N|s|
| |S| |N|s|M|
|S|m|N|s|M|n|
|m|N|s|M|n|S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
|M| |S| |N|s|
| |S| |N|s|M|
|S|m|N|s|M|n|
|m|N|s|M|n|S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
|M| |S| |N|s|
| |S| |N|s|M|
|S|m|N|s|M|n|
|m|N|s|M|n|S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
|M| |S| |N|s|
| |S| |N|s|M|
|S|m|N|s|M|n|
|m|N|s|M|n|S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
|M| |S| |N|s|
| |S| |N|s|M|
|S|m|N|s|M|n|
|m|N|s|M|n|S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
|M| |S| |N|s|
| |S| |N|s|M|
|S|m|N|s|M|n|
|m|N|s|M|n|S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
|M| |S| |N|s|
| |S| |N|s|M|
|S|m|N|s|M|n|
|m|N|s|M|n|S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
|M| |S| |N|s|
| |S| |N|s|M|
|S|m|N|s|M|n|
|m|N|s|M|n|S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
|M| |S| |N|s|
| |S| |N|s|M|
|S|m|N|s|M|n|
|m|N|s|M|n|S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
|M| |S| |N|s|
| |S| |N|s|M|
|S|m|N|s|M|n|
|m|N|s|M|n|S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
|M| |S| |N|s|
| |S| |N|s|M|
|S|m|N|s|M|n|
|m|N|s|M|n|S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
|M| |S| |N|s|
| |S| |N|s|M|
|S|m|N|s|M|n|
|m|N|s|M|n|S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
|M| |S| |N|s|
| |S| |N|s|M|
|S|m|N|s|M|n|
|m|N|s|M|n|S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
|M| |S| |N|s|
| |S| |N|s|M|
|S|m|N|s|M|n|
|m|N|s|M|n|S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
|M| |S| |N|s|
| |S| |N|s|M|
|S|m|N|s|M|n|
|m|N|s|M|n|S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
*************
|M| |S| |N|s|
| |S| |N|s|M|
|S|m|N|s|M|n|
|m|N|s|M|n|S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
|M| |S| |N|s|
| |S| |N|s|M|
|S|m|N|s|M|n|
|m|N|s|M|n|S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
*************
|M| |S| |N|s|
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M|n|S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
|M| |S| |N|s|
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M|n|S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
|M| |S| |N|s|
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M|n|S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
|M| |S| |N|s|
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M|n|S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
|M| |S| |N|s|
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M|n|S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
*************
|M| |S| |N|s|
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
|M| |S| |N|s|
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
|M| |S| |N|s|
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
|M| |S| |N|s|
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
|M| |S| |N|s|
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
|M| |S| |N|s|
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
|M| |S| |N|s|
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
|M| |S| |N|s|
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
|M| |S| |N|s|
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
|M| |S| |N|s|
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
|M| |S| |N|s|
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
|M| |S| |N|s|
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
|M| |S| |N|s|
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
|M| |S| |N|s|
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
|M| |S| |N|s|
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
*************
|M| |S| |N|s|
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
*************
|M| |S| |N|s|
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
*************
|M| |S| |N|s|
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
*************
|M| | | |N|s|
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
|M| | | |N|s|
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
|M| | | |N|s|
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
|M| | | |N|s|
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
|M| | | |N|s|
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
|M| | | |N|s|
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
|M| | | |N|s|
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
|M| | | |N|s|
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
|M| | | |N|s|
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
|M| | | |N|s|
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
|M| | | |N|s|
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
|M| | | |N|s|
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
|M| | | |N|s|
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
|M| | | |N|s|
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
|M| | | |N|s|
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
|M| | | |N|s|
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
|M| | | |N|s|
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
|M| | | |N|s|
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
|M| | | |N|s|
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
|M| | | |N|s|
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
|M| | | |N|s|
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
|M| | | |N|s|
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
|M| | | |N|s|
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
|M| | | |N|s|
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
|M| | | |N|s|
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
|M| | | |N|s|
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
|M| | | |N|s|
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
|M| | | |N|s|
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
|M| | | |N|s|
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
|M| | | |N|s|
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
|M| | | |N|s|
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
|M| | | |N|s|
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
|M| | | |N|s|
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
|M| | | |N|s|
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
|M| | | |N|s|
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
|M| | | |N|s|
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
|M| | | |N|s|
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
|M| | | |N|s|
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
|M| | | |N|s|
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
|M| | | |N|s|
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
|M| | | |N|s|
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
|M| | | |N|s|
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
|M| | | |N|s|
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
|M| | | |N|s|
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
|M| | | |N|s|
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
|M| | | |N|s|
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
|M| | | |N|s|
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
|M| | | |N|s|
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
|M| | | |N|s|
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
|M| | | |N|s|
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
|M| | | |N|s|
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
|M| | | |N|s|
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
|M| | | |N|s|
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
|M| | | |N|s|
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
|M| | | |N|s|
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
|M| | | |N|s|
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
|M| | | |N|s|
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
|M| | | |N|s|
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
|M| | | |N|s|
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
|M| | | |N|s|
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
|M| | | |N|s|
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
|M| | | |N|s|
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
|M| | | |N|s|
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
|M| | | |N|s|
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
|M| | | |N|s|
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
|M| | | |N|s|
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
|M| | | |N|s|
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
|M| | | |N|s|
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
|M| | | |N|s|
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
|M| | | |N|s|
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
|M| | | |N|s|
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
|M| | | |N|s|
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
|M| | | |N|s|
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
|M| | | |N|s|
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
|M| | | |N|s|
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
|M| | | |N|s|
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
|M| | | |N|s|
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
|M| | | |N|s|
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
|M| | | |N|s|
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
|M| | | |N|s|
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
|M| | | |N|s|
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
|M| | | |N|s|
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
|M| | | |N|s|
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
|M| | | |N|s|
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
|M| | | |N|s|
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
|M| | | |N|s|
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
|M| | | |N|s|
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
|M| | | |N|s|
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
|M| | | |N|s|
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
|M| | | |N|s|
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
|M| | | |N|s|
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
|M| | | |N|s|
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
|M| | | |N|s|
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
|M| | | |N|s|
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
|M| | | |N|s|
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
|M| | | |N|s|
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
|M| | | |N|s|
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
|M| | | |N|s|
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
|M| | | |N|s|
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
|M| | | |N|s|
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
|M| | | |N|s|
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
|M| | | |N|s|
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
|M| | | |N|s|
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
|M| | | |N|s|
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
|M| | | |N|s|
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
|M| | | |N|s|
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
|M| | | |N|s|
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
|M| | | |N|s|
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
|M| | | |N|s|
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
|M| | | |N|s|
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
|M| | | |N|s|
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
|M| | | |N|s|
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
|M| | | |N|s|
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
|M| | | |N|s|
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
|M| | | |N|s|
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
|M| | | |N|s|
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
|M| | | |N|s|
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
|M| | | |N|s|
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
|M| | | |N|s|
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
|M| | | |N|s|
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
|M| | | |N|s|
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
|M| | | |N|s|
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
|M| | | |N|s|
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
|M| | | |N|s|
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
|M| | | |N|s|
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
|M| | | |N|s|
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
|M| | | |N|s|
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
|M| | | |N|s|
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
|M| | | |N|s|
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
|M| | | |N|s|
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
|M| | | |N|s|
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
|M| | | |N|s|
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
|M| | | |N|s|
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
|M| | | |N|s|
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
|M| | | |N|s|
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
|M| | | |N|s|
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
|M| | | |N|s|
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
|M| | | |N|s|
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
|M| | | |N|s|
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
|M| | | |N|s|
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
|M| | | |N|s|
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
|M| | | |N|s|
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
|M| | | |N|s|
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
|M| | | |N|s|
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
|M| | | |N|s|
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
*************
|M| | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
|M| | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
|M| | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
|M| | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
|M| | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
|M| | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
|M| | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
|M| | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
|M| | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
|M| | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
|M| | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
|M| | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
|M| | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
|M| | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
|M| | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
|M| | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
|M| | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
|M| | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
|M| | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
|M| | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
|M| | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
|M| | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
|M| | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
|M| | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
|M| | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
|M| | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
|M| | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
|M| | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
|M| | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
|M| | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
|M| | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
|M| | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
|M| | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
|M| | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
|M| | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
|M| | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
|M| | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
|M| | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
|M| | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
|M| | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
|M| | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
|M| | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
|M| | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
|M| | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
|M| | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
|M| | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
|M| | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
|M| | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
|M| | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
|M| | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
|M| | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
|M| | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
|M| | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
|M| | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
|M| | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
|M| | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
|M| | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
|M| | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
|M| | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
|M| | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
|M| | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
|M| | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
|M| | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
|M| | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
|M| | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
|M| | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
|M| | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
|M| | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
|M| | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
|M| | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
|M| | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
*************
|M| | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
|M| | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
|M| | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
*************
|M| | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
|M| | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
*************
|M| | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
|M| | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
|M| | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
|M| | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
|M| | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
*************
|M| | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
|M| | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
|M| | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
|M| | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
|M| | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
|M| | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
|M| | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
|M| | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
|M| | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
*************
|M| | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
|M| | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
|M| | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
|M| | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
|M| | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
*************
|M| | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
|M| | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
|M| | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
|M| | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
|M| | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
|M| | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
|M| | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
*************
|M| | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
|M| | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
|M| | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
|M| | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
|M| | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
|M| | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
|M| | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
|M| | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
|M| | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
|M| | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
|M| | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
|M| | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
|M| | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
|M| | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
|M| | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
|M| | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
|M| | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
|M| | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
|M| | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
|M| | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
|M| | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
|M| | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
|M| | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
|M| | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
|M| | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
|M| | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
|M| | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
|M| | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
|M| | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
|M| | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
|M| | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
|M| | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
|M| | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
|M| | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
|M| | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
|M| | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
|M| | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: gladiator_arena.reload(source)
std::exception
Trying: gladiator_arena.reload(source)
std::exception
Trying: gladiator_arena.reload(source)
std::exception
Trying: gladiator_arena.reload(source)
std::exception
Trying: gladiator_arena.reload(source)
std::exception
Trying: gladiator_arena.reload(source)
std::exception
Trying: gladiator_arena.reload(source)
std::exception
Trying: gladiator_arena.reload(source)
std::exception
Trying: gladiator_arena.reload(source)
std::exception
Trying: gladiator_arena.reload(source)
std::exception
Trying: gladiator_arena.reload(source)
std::exception
Trying: gladiator_arena.reload(source)
std::exception
Trying: gladiator_arena.reload(source)
std::exception
Trying: gladiator_arena.reload(source)
std::exception
Trying: gladiator_arena.reload(source)
std::exception
Trying: gladiator_arena.reload(source)
std::exception
Trying: gladiator_arena.reload(source)
std::exception
Trying: gladiator_arena.reload(source)
std::exception
Trying: gladiator_arena.reload(source)
std::exception
Trying: gladiator_arena.reload(source)
std::exception
Trying: gladiator_arena.reload(source)
std::exception
Trying: gladiator_arena.reload(source)
std::exception
Trying: gladiator_arena.reload(source)
std::exception
Trying: gladiator_arena.reload(source)
std::exception
Trying: gladiator_arena.reload(source)
std::exception
Trying: gladiator_arena.reload(source)
std::exception
Trying: gladiator_arena.reload(source)
std::exception
Trying: gladiator_arena.reload(source)
std::exception
Trying: gladiator_arena.reload(source)
std::exception
Trying: gladiator_arena.reload(source)
std::exception
Trying: gladiator_arena.reload(source)
std::exception
Trying: gladiator_arena.reload(source)
std::exception
Trying: gladiator_arena.reload(source)
std::exception
Trying: gladiator_arena.reload(source)
std::exception
Trying: gladiator_arena.reload(source)
std::exception
Trying: gladiator_arena.reload(source)
std::exception
Trying: gladiator_arena.reload(source)
std::exception
Trying: gladiator_arena.reload(source)
std::exception
Trying: gladiator_arena.reload(source)
std::exception
Trying: gladiator_arena.reload(source)
std::exception
Trying: gladiator_arena.reload(source)
Trying: gladiator_arena.reload(source)
Trying: gladiator_arena.reload(source)
Trying: gladiator_arena.reload(source)
Trying: gladiator_arena.reload(source)
Trying: gladiator_arena.reload(source)
Trying: gladiator_arena.reload(source)
Trying: gladiator_arena.reload(source)
Trying: gladiator_arena.reload(source)
Trying: gladiator_arena.reload(source)
Trying: gladiator_arena.reload(source)
std::exception
Trying: gladiator_arena.reload(source)
std::exception
Trying: gladiator_arena.reload(source)
std::exception
Trying: gladiator_arena.reload(source)
std::exception
Trying: gladiator_arena.reload(source)
std::exception
Trying: gladiator_arena.reload(source)
std::exception
Trying: gladiator_arena.reload(source)
std::exception
Trying: gladiator_arena.reload(source)
std::exception
Trying: gladiator_arena.reload(source)
std::exception
Trying: gladiator_arena.reload(source)
std::exception
Trying: gladiator_arena.reload(source)
std::exception
Trying: gladiator_arena.reload(source)
std::exception
Trying: gladiator_arena.reload(source)
std::exception
Trying: gladiator_arena.reload(source)
std::exception
Trying: gladiator_arena.reload(source)
std::exception
Trying: gladiator_arena.reload(source)
std::exception
Trying: gladiator_arena.reload(source)
std::exception
Trying: gladiator_arena.reload(source)
std::exception
Trying: gladiator_arena.reload(source)
std::exception
Trying: gladiator_arena.reload(source)
std::exception
Trying: gladiator_arena.reload(source)
Trying: gladiator_arena.reload(source)
Trying: gladiator_arena.reload(source)
Trying: gladiator_arena.reload(source)
Trying: gladiator_arena.reload(source)
Trying: gladiator_arena.reload(source)
Trying: gladiator_arena.reload(source)
Trying: gladiator_arena.reload(source)
Trying: gladiator_arena.reload(source)
Trying: gladiator_arena.reload(source)
Trying: gladiator_arena.reload(source)
std::exception
Trying: gladiator_arena.reload(source)
std::exception
Trying: gladiator_arena.reload(source)
std::exception
Trying: gladiator_arena.reload(source)
std::exception
Trying: gladiator_arena.reload(source)
std::exception
Trying: gladiator_arena.reload(source)
std::exception
Trying: gladiator_arena.reload(source)
std::exception
Trying: gladiator_arena.reload(source)
std::exception
Trying: gladiator_arena.reload(source)
std::exception
Trying: gladiator_arena.reload(source)
std::exception
Trying: gladiator_arena.reload(source)
Trying: gladiator_arena.reload(source)
Trying: gladiator_arena.reload(source)
Trying: gladiator_arena.reload(source)
Trying: gladiator_arena.reload(source)
Trying: gladiator_arena.reload(source)
Trying: gladiator_arena.reload(source)
Trying: gladiator_arena.reload(source)
Trying: gladiator_arena.reload(source)
Trying: gladiator_arena.reload(source)
Trying: gladiator_arena.reload(source)
Trying: gladiator_arena.reload(source)
Trying: gladiator_arena.reload(source)
Trying: gladiator_arena.reload(source)
Trying: gladiator_arena.reload(source)
Trying: gladiator_arena.reload(source)
Trying: gladiator_arena.reload(source)
Trying: gladiator_arena.reload(source)
Trying: gladiator_arena.reload(source)
Trying: gladiator_arena.reload(source)
Trying: gladiator_arena.reload(source)
Trying: gladiator_arena.reload(source)
Trying: gladiator_arena.reload(source)
Trying: gladiator_arena.reload(source)
Trying: gladiator_arena.reload(source)
Trying: gladiator_arena.reload(source)
Trying: gladiator_arena.reload(source)
Trying: gladiator_arena.reload(source)
Trying: gladiator_arena.reload(source)
Trying: gladiator_arena.reload(source)
Trying: gladiator_arena.reload(source)
Trying: gladiator_arena.reload(source)
Trying: gladiator_arena.reload(source)
Trying: gladiator_arena.reload(source)
Trying: gladiator_arena.reload(source)
Trying: gladiator_arena.reload(source)
Trying: gladiator_arena.reload(source)
Trying: gladiator_arena.reload(source)
Trying: gladiator_arena.reload(source)
Trying: gladiator_arena.reload(source)
Trying: gladiator_arena.reload(source)
Trying: gladiator_arena.reload(source)
Trying: gladiator_arena.reload(source)
Trying: gladiator_arena.reload(source)
Trying: gladiator_arena.reload(source)
Trying: gladiator_arena.reload(source)
Trying: gladiator_arena.reload(source)
Trying: gladiator_arena.reload(source)
Trying: gladiator_arena.reload(source)
Trying: gladiator_arena.reload(source)
Trying: gladiator_arena.reload(source)
Trying: gladiator_arena.reload(source)
Trying: gladiator_arena.reload(source)
Trying: gladiator_arena.reload(source)
Trying: gladiator_arena.reload(source)
Trying: gladiator_arena.reload(source)
Trying: gladiator_arena.reload(source)
Trying: gladiator_arena.reload(source)
Trying: gladiator_arena.reload(source)
Trying: gladiator_arena.reload(source)
Trying: gladiator_arena.reload(source)
Trying: gladiator_arena.reload(source)
Trying: gladiator_arena.reload(source)
Trying: gladiator_arena.reload(source)
Trying: gladiator_arena.reload(source)
Trying: gladiator_arena.reload(source)
Trying: gladiator_arena.reload(source)
Trying: gladiator_arena.reload(source)
Trying: gladiator_arena.reload(source)
Trying: gladiator_arena.reload(source)
Trying: gladiator_arena.reload(source)
Trying: gladiator_arena.reload(source)
Trying: gladiator_arena.reload(source)
Trying: gladiator_arena.reload(source)
Trying: gladiator_arena.reload(source)
Trying: gladiator_arena.reload(source)
Trying: gladiator_arena.reload(source)
Trying: gladiator_arena.reload(source)
Trying: gladiator_arena.reload(source)
Trying: gladiator_arena.reload(source)
Trying: gladiator_arena.reload(source)
std::exception
Trying: gladiator_arena.reload(source)
std::exception
Trying: gladiator_arena.reload(source)
std::exception
Trying: gladiator_arena.reload(source)
std::exception
Trying: gladiator_arena.reload(source)
std::exception
Trying: gladiator_arena.reload(source)
std::exception
Trying: gladiator_arena.reload(source)
std::exception
Trying: gladiator_arena.reload(source)
std::exception
Trying: gladiator_arena.reload(source)
std::exception
Trying: gladiator_arena.reload(source)
std::exception
Trying: gladiator_arena.reload(source)
Trying: gladiator_arena.reload(source)
Trying: gladiator_arena.reload(source)
Trying: gladiator_arena.reload(source)
Trying: gladiator_arena.reload(source)
Trying: gladiator_arena.reload(source)
Trying: gladiator_arena.reload(source)
Trying: gladiator_arena.reload(source)
Trying: gladiator_arena.reload(source)
Trying: gladiator_arena.reload(source)
Trying: gladiator_arena.reload(source)
Trying: gladiator_arena.reload(source)
Trying: gladiator_arena.reload(source)
Trying: gladiator_arena.reload(source)
Trying: gladiator_arena.reload(source)
Trying: gladiator_arena.reload(source)
Trying: gladiator_arena.reload(source)
Trying: gladiator_arena.reload(source)
Trying: gladiator_arena.reload(source)
Trying: gladiator_arena.reload(source)
Trying: gladiator_arena.reload(source)
Trying: gladiator_arena.reload(source)
Trying: gladiator_arena.reload(source)
Trying: gladiator_arena.reload(source)
Trying: gladiator_arena.reload(source)
Trying: gladiator_arena.reload(source)
Trying: gladiator_arena.reload(source)
Trying: gladiator_arena.reload(source)
Trying: gladiator_arena.reload(source)
Trying: gladiator_arena.reload(source)
Trying: gladiator_arena.reload(source)
Trying: gladiator_arena.reload(source)
Trying: gladiator_arena.reload(source)
Trying: gladiator_arena.reload(source)
Trying: gladiator_arena.reload(source)
Trying: gladiator_arena.reload(source)
Trying: gladiator_arena.reload(source)
Trying: gladiator_arena.reload(source)
Trying: gladiator_arena.reload(source)
Trying: gladiator_arena.reload(source)
Trying: gladiator_arena.reload(source)
std::exception
Trying: gladiator_arena.reload(source)
std::exception
Trying: gladiator_arena.reload(source)
std::exception
Trying: gladiator_arena.reload(source)
std::exception
Trying: gladiator_arena.reload(source)
std::exception
Trying: gladiator_arena.reload(source)
std::exception
Trying: gladiator_arena.reload(source)
std::exception
Trying: gladiator_arena.reload(source)
std::exception
Trying: gladiator_arena.reload(source)
std::exception
Trying: gladiator_arena.reload(source)
std::exception
Trying: gladiator_arena.reload(source)
Trying: gladiator_arena.reload(source)
Trying: gladiator_arena.reload(source)
Trying: gladiator_arena.reload(source)
Trying: gladiator_arena.reload(source)
Trying: gladiator_arena.reload(source)
Trying: gladiator_arena.reload(source)
Trying: gladiator_arena.reload(source)
Trying: gladiator_arena.reload(source)
Trying: gladiator_arena.reload(source)
Trying: gladiator_arena.reload(source)
Trying: gladiator_arena.reload(source)
Trying: gladiator_arena.reload(source)
Trying: gladiator_arena.reload(source)
Trying: gladiator_arena.reload(source)
Trying: gladiator_arena.reload(source)
Trying: gladiator_arena.reload(source)
Trying: gladiator_arena.reload(source)
Trying: gladiator_arena.reload(source)
Trying: gladiator_arena.reload(source)
Trying: gladiator_arena.reload(source)
Trying: gladiator_arena.reload(source)
Trying: gladiator_arena.reload(source)
Trying: gladiator_arena.reload(source)
Trying: gladiator_arena.reload(source)
Trying: gladiator_arena.reload(source)
Trying: gladiator_arena.reload(source)
Trying: gladiator_arena.reload(source)
Trying: gladiator_arena.reload(source)
Trying: gladiator_arena.reload(source)
Trying: gladiator_arena.reload(source)
Trying: gladiator_arena.reload(source)
Trying: gladiator_arena.reload(source)
Trying: gladiator_arena.reload(source)
Trying: gladiator_arena.reload(source)
Trying: gladiator_arena.reload(source)
Trying: gladiator_arena.reload(source)
Trying: gladiator_arena.reload(source)
Trying: gladiator_arena.reload(source)
Trying: gladiator_arena.reload(source)
Trying: gladiator_arena.reload(source)
Trying: gladiator_arena.reload(source)
Trying: gladiator_arena.reload(source)
Trying: gladiator_arena.reload(source)
Trying: gladiator_arena.reload(source)
Trying: gladiator_arena.reload(source)
Trying: gladiator_arena.reload(source)
Trying: gladiator_arena.reload(source)
Trying: gladiator_arena.reload(source)
Trying: gladiator_arena.reload(source)
Trying: gladiator_arena.reload(source)
Trying: gladiator_arena.reload(source)
Trying: gladiator_arena.reload(source)
Trying: gladiator_arena.reload(source)
Trying: gladiator_arena.reload(source)
Trying: gladiator_arena.reload(source)
Trying: gladiator_arena.reload(source)
Trying: gladiator_arena.reload(source)
Trying: gladiator_arena.reload(source)
Trying: gladiator_arena.reload(source)
Trying: gladiator_arena.reload(source)
Trying: gladiator_arena.reload(source)
Trying: gladiator_arena.reload(source)
Trying: gladiator_arena.reload(source)
Trying: gladiator_arena.reload(source)
Trying: gladiator_arena.reload(source)
Trying: gladiator_arena.reload(source)
Trying: gladiator_arena.reload(source)
Trying: gladiator_arena.reload(source)
Trying: gladiator_arena.reload(source)
Trying: gladiator_arena.reload(source)
Trying: gladiator_arena.reload(source)
Trying: gladiator_arena.reload(source)
Trying: gladiator_arena.reload(source)
Trying: gladiator_arena.reload(source)
Trying: gladiator_arena.reload(source)
Trying: gladiator_arena.reload(source)
Trying: gladiator_arena.reload(source)
Trying: gladiator_arena.reload(source)
Trying: gladiator_arena.reload(source)
Trying: gladiator_arena.reload(source)
Trying: gladiator_arena.reload(source)
Trying: gladiator_arena.reload(source)
Trying: gladiator_arena.reload(source)
Trying: gladiator_arena.reload(source)
Trying: gladiator_arena.reload(source)
Trying: gladiator_arena.reload(source)
Trying: gladiator_arena.reload(source)
Trying: gladiator_arena.reload(source)
Trying: gladiator_arena.reload(source)
Trying: gladiator_arena.reload(source)
Trying: gladiator_arena.reload(source)
Trying: gladiator_arena.reload(source)
Trying: gladiator_arena.reload(source)
Trying: gladiator_arena.reload(source)
Trying: gladiator_arena.reload(source)
Trying: gladiator_arena.reload(source)
Trying: gladiator_arena.reload(source)
Trying: gladiator_arena.reload(source)
Trying: gladiator_arena.reload(source)
Trying: gladiator_arena.reload(source)
Trying: gladiator_arena.reload(source)
Trying: gladiator_arena.reload(source)
Trying: gladiator_arena.reload(source)
Trying: gladiator_arena.reload(source)
Trying: gladiator_arena.reload(source)
Trying: gladiator_arena.reload(source)
Trying: gladiator_arena.reload(source)
Trying: gladiator_arena.reload(source)
Trying: gladiator_arena.reload(source)
Trying: gladiator_arena.reload(source)
Trying: gladiator_arena.reload(source)
Trying: gladiator_arena.reload(source)
Trying: gladiator_arena.reload(source)
Trying: gladiator_arena.reload(source)
Trying: gladiator_arena.reload(source)
Trying: gladiator_arena.reload(source)
Trying: gladiator_arena.reload(source)
Trying: gladiator_arena.reload(source)
Trying: gladiator_arena.reload(source)
Trying: gladiator_arena.reload(source)
Trying: gladiator_arena.reload(source)
Trying: gladiator_arena.reload(source)
Trying: gladiator_arena.reload(source)
Trying: gladiator_arena.reload(source)
Trying: gladiator_arena.reload(source)
Trying: gladiator_arena.reload(source)
Trying: gladiator_arena.reload(source)
Trying: gladiator_arena.reload(source)
Trying: gladiator_arena.reload(source)
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S|m|N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
*************
| | | | |N| |
| |S| |N|s|M|
|S| |N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S| |N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S| |N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S| |N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S| |N|s|M| |
|m|N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
*************
| | | | |N| |
| |S| |N|s|M|
|S| |N|s|M| |
| |N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
*************
| | | | |N| |
| |S| |N|s|M|
|S| |N|s|M| |
| |N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
*************
| | | | |N| |
| |S| |N|s|M|
|S| |N|s|M| |
| |N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
*************
| | | | |N| |
| |S| |N|s|M|
|S| |N|s|M| |
| |N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
*************
| | | | |N| |
| |S| |N|s|M|
|S| |N|s|M| |
| |N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
*************
| | | | |N| |
| |S| |N|s|M|
|S| |N|s|M| |
| |N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S| |N|s|M| |
| |N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
*************
| | | | |N| |
| |S| |N|s|M|
|S| |N|s|M| |
| |N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S| |N|s|M| |
| |N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S| |N|s|M| |
| |N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S| |N|s|M| |
| |N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S| |N|s|M| |
| |N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S| |N|s|M| |
| |N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
*************
| | | | |N| |
| |S| |N|s|M|
|S| |N|s|M| |
| |N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S| |N|s|M| |
| |N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S| |N|s|M| |
| |N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S| |N|s|M| |
| |N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S| |N|s|M| |
| |N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S| |N|s|M| |
| |N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
*************
| | | | |N| |
| |S| |N|s|M|
|S| |N|s|M| |
| |N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S| |N|s|M| |
| |N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S| |N|s|M| |
| |N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S| |N|s|M| |
| |N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S| |N|s|M| |
| |N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S| |N|s|M| |
| |N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
*************
| | | | |N| |
| |S| |N|s|M|
|S| |N|s|M| |
| |N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S| |N|s|M| |
| |N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S| |N|s|M| |
| |N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S| |N|s|M| |
| |N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S| |N|s|M| |
| |N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S| |N|s|M| |
| |N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S| |N|s|M| |
| |N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S| |N|s|M| |
| |N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S| |N|s|M| |
| |N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S| |N|s|M| |
| |N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S| |N|s|M| |
| |N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S| |N|s|M| |
| |N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S| |N|s|M| |
| |N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S| |N|s|M| |
| |N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S| |N|s|M| |
| |N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S| |N|s|M| |
| |N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S| |N|s|M| |
| |N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S| |N|s|M| |
| |N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S| |N|s|M| |
| |N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S| |N|s|M| |
| |N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S| |N|s|M| |
| |N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S| |N|s|M| |
| |N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S| |N|s|M| |
| |N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S| |N|s|M| |
| |N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S| |N|s|M| |
| |N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S| |N|s|M| |
| |N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S| |N|s|M| |
| |N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S| |N|s|M| |
| |N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S| |N|s|M| |
| |N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S| |N|s|M| |
| |N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S| |N|s|M| |
| |N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S| |N|s|M| |
| |N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S| |N|s|M| |
| |N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S| |N|s|M| |
| |N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S| |N|s|M| |
| |N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S| |N|s|M| |
| |N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S| |N|s|M| |
| |N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S| |N|s|M| |
| |N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S| |N|s|M| |
| |N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S| |N|s|M| |
| |N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S| |N|s|M| |
| |N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S| |N|s|M| |
| |N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S| |N|s|M| |
| |N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S| |N|s|M| |
| |N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S| |N|s|M| |
| |N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S| |N|s|M| |
| |N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S| |N|s|M| |
| |N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S| |N|s|M| |
| |N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S| |N|s|M| |
| |N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S| |N|s|M| |
| |N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S| |N|s|M| |
| |N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S| |N|s|M| |
| |N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S| |N|s|M| |
| |N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S| |N|s|M| |
| |N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S| |N|s|M| |
| |N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S| |N|s|M| |
| |N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S| |N|s|M| |
| |N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S| |N|s|M| |
| |N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S| |N|s|M| |
| |N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S| |N|s|M| |
| |N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S| |N|s|M| |
| |N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
*************
| | | | |N| |
| |S| |N|s|M|
|S| |N|s|M| |
| |N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S| |N|s|M| |
| |N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S| |N|s|M| |
| |N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S| |N|s|M| |
| |N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S| |N|s|M| |
| |N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S| |N|s|M| |
| |N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S| |N|s|M| |
| |N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
*************
| | | | |N| |
| |S| |N|s|M|
|S| |N|s|M| |
| |N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S| |N|s|M| |
| |N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S| |N|s|M| |
| |N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S| |N|s|M| |
| |N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S| |N|s|M| |
| |N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S| |N|s|M| |
| |N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S| |N|s|M| |
| |N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S| |N|s|M| |
| |N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S| |N|s|M| |
| |N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S| |N|s|M| |
| |N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S| |N|s|M| |
| |N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S| |N|s|M| |
| |N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s|M|
|S| |N|s|M| |
| |N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
*************
| | | | |N| |
| |S| |N|s| |
|S| |N|s| | |
| |N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s| |
|S| |N|s| | |
| |N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
*************
| | | | |N| |
| |S| |N|s| |
|S| |N|s| | |
| |N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
*************
| | | | |N| |
| |S| |N|s| |
|S| |N|s| | |
| |N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
*************
| | | | |N| |
| |S| |N|s| |
|S| |N|s| | |
| |N|s|M| |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
*************
| | | | |N| |
| |S| |N|s| |
|S| |N|s| | |
| |N|s| | |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
*************
| | | | |N| |
| |S| |N|s| |
|S| |N|s| | |
| |N|s| | |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
*************
| | | | |N| |
| |S| |N|s| |
|S| |N|s| | |
| |N|s| | |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s| |
|S| |N|s| | |
| |N|s| | |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s| |
|S| |N|s| | |
| |N|s| | |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s| |
|S| |N|s| | |
| |N|s| | |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s| |
|S| |N|s| | |
| |N|s| | |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
*************
| | | | |N| |
| |S| |N|s| |
|S| |N|s| | |
| |N|s| | |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s| |
|S| |N|s| | |
| |N|s| | |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s| |
|S| |N|s| | |
| |N|s| | |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s| |
|S| |N|s| | |
| |N|s| | |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s| |
|S| |N|s| | |
| |N|s| | |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s| |
|S| |N|s| | |
| |N|s| | |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
*************
| | | | |N| |
| |S| |N|s| |
|S| |N|s| | |
| |N|s| | |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s| |
|S| |N|s| | |
| |N|s| | |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s| |
|S| |N|s| | |
| |N|s| | |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s| |
|S| |N|s| | |
| |N|s| | |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s| |
|S| |N|s| | |
| |N|s| | |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s| |
|S| |N|s| | |
| |N|s| | |S|
|N|s|M|n|S|m|
|s|M|n|S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
*************
| | | | |N| |
| |S| |N|s| |
|S| |N|s| | |
| |N|s| | |S|
|N|s| |n|S|m|
|s|M|n|S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s| |
|S| |N|s| | |
| |N|s| | |S|
|N|s| |n|S|m|
|s|M|n|S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s| |
|S| |N|s| | |
| |N|s| | |S|
|N|s| |n|S|m|
|s|M|n|S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s| |
|S| |N|s| | |
| |N|s| | |S|
|N|s| |n|S|m|
|s|M|n|S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s| |
|S| |N|s| | |
| |N|s| | |S|
|N|s| |n|S|m|
|s|M|n|S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s| |
|S| |N|s| | |
| |N|s| | |S|
|N|s| |n|S|m|
|s|M|n|S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
*************
| | | | |N| |
| |S| |N|s| |
|S| |N|s| | |
| |N|s| | |S|
|N|s| |n|S|m|
|s|M|n|S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s| |
|S| |N|s| | |
| |N|s| | |S|
|N|s| |n|S|m|
|s|M|n|S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s| |
|S| |N|s| | |
| |N|s| | |S|
|N|s| |n|S|m|
|s|M|n|S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s| |
|S| |N|s| | |
| |N|s| | |S|
|N|s| |n|S|m|
|s|M|n|S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s| |
|S| |N|s| | |
| |N|s| | |S|
|N|s| |n|S|m|
|s|M|n|S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s| |
|S| |N|s| | |
| |N|s| | |S|
|N|s| |n|S|m|
|s|M|n|S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s| |
|S| |N|s| | |
| |N|s| | |S|
|N|s| |n|S|m|
|s|M|n|S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s| |
|S| |N|s| | |
| |N|s| | |S|
|N|s| |n|S|m|
|s|M|n|S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s| |
|S| |N|s| | |
| |N|s| | |S|
|N|s| |n|S|m|
|s|M|n|S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s| |
|S| |N|s| | |
| |N|s| | |S|
|N|s| |n|S|m|
|s|M|n|S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s| |
|S| |N|s| | |
| |N|s| | |S|
|N|s| |n|S|m|
|s|M|n|S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s| |
|S| |N|s| | |
| |N|s| | |S|
|N|s| |n|S|m|
|s|M|n|S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s| |
|S| |N|s| | |
| |N|s| | |S|
|N|s| |n|S|m|
|s|M|n|S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s| |
|S| |N|s| | |
| |N|s| | |S|
|N|s| |n|S|m|
|s|M|n|S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s| |
|S| |N|s| | |
| |N|s| | |S|
|N|s| |n|S|m|
|s|M|n|S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s| |
|S| |N|s| | |
| |N|s| | |S|
|N|s| |n|S|m|
|s|M|n|S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s| |
|S| |N|s| | |
| |N|s| | |S|
|N|s| |n|S|m|
|s|M|n|S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s| |
|S| |N|s| | |
| |N|s| | |S|
|N|s| |n|S|m|
|s|M|n|S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s| |
|S| |N|s| | |
| |N|s| | |S|
|N|s| |n|S|m|
|s|M|n|S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s| |
|S| |N|s| | |
| |N|s| | |S|
|N|s| |n|S|m|
|s|M|n|S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s| |
|S| |N|s| | |
| |N|s| | |S|
|N|s| |n|S|m|
|s|M|n|S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s| |
|S| |N|s| | |
| |N|s| | |S|
|N|s| |n|S|m|
|s|M|n|S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s| |
|S| |N|s| | |
| |N|s| | |S|
|N|s| |n|S|m|
|s|M|n|S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s| |
|S| |N|s| | |
| |N|s| | |S|
|N|s| |n|S|m|
|s|M|n|S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s| |
|S| |N|s| | |
| |N|s| | |S|
|N|s| |n|S|m|
|s|M|n|S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s| |
|S| |N|s| | |
| |N|s| | |S|
|N|s| |n|S|m|
|s|M|n|S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s| |
|S| |N|s| | |
| |N|s| | |S|
|N|s| |n|S|m|
|s|M|n|S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s| |
|S| |N|s| | |
| |N|s| | |S|
|N|s| |n|S|m|
|s|M|n|S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s| |
|S| |N|s| | |
| |N|s| | |S|
|N|s| |n|S|m|
|s|M|n|S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s| |
|S| |N|s| | |
| |N|s| | |S|
|N|s| |n|S|m|
|s|M|n|S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s| |
|S| |N|s| | |
| |N|s| | |S|
|N|s| |n|S|m|
|s|M|n|S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s| |
|S| |N|s| | |
| |N|s| | |S|
|N|s| |n|S|m|
|s|M|n|S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s| |
|S| |N|s| | |
| |N|s| | |S|
|N|s| |n|S|m|
|s|M|n|S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s| |
|S| |N|s| | |
| |N|s| | |S|
|N|s| |n|S|m|
|s|M|n|S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s| |
|S| |N|s| | |
| |N|s| | |S|
|N|s| |n|S|m|
|s|M|n|S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s| |
|S| |N|s| | |
| |N|s| | |S|
|N|s| |n|S|m|
|s|M|n|S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s| |
|S| |N|s| | |
| |N|s| | |S|
|N|s| |n|S|m|
|s|M|n|S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s| |
|S| |N|s| | |
| |N|s| | |S|
|N|s| |n|S|m|
|s|M|n|S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
*************
| | | | |N| |
| |S| |N|s| |
|S| |N|s| | |
| |N|s| | |S|
|N|s| |n|S|m|
|s|M|n|S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s| |
|S| |N|s| | |
| |N|s| | |S|
|N|s| |n|S|m|
|s|M|n|S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s| |
|S| |N|s| | |
| |N|s| | |S|
|N|s| |n|S|m|
|s|M|n|S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s| |
|S| |N|s| | |
| |N|s| | |S|
|N|s| |n|S|m|
|s|M|n|S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s| |
|S| |N|s| | |
| |N|s| | |S|
|N|s| |n|S|m|
|s|M|n|S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s| |
|S| |N|s| | |
| |N|s| | |S|
|N|s| |n|S|m|
|s|M|n|S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
*************
| | | | |N| |
| |S| |N|s| |
|S| |N|s| | |
| |N|s| | |S|
|N|s| |n|S|m|
|s|M|n|S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s| |
|S| |N|s| | |
| |N|s| | |S|
|N|s| |n|S|m|
|s|M|n|S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s| |
|S| |N|s| | |
| |N|s| | |S|
|N|s| |n|S|m|
|s|M|n|S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s| |
|S| |N|s| | |
| |N|s| | |S|
|N|s| |n|S|m|
|s|M|n|S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s| |
|S| |N|s| | |
| |N|s| | |S|
|N|s| |n|S|m|
|s|M|n|S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N|s| |
|S| |N|s| | |
| |N|s| | |S|
|N|s| |n|S|m|
|s|M|n|S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
*************
| | | | |N| |
| |S| |N|s| |
|S| |N|s| | |
| |N|s| | |S|
|N|s| |n|S|m|
|s|M|n|S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
*************
| | | | |N| |
| |S| |N|s| |
|S| |N| | | |
| |N|s| | |S|
|N|s| |n|S|m|
|s|M|n|S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
*************
| | | | |N| |
| |S| |N|s| |
|S| |N| | | |
| |N| | | |S|
|N|s| |n|S|m|
|s|M|n|S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N|s| |n|S|m|
|s|M|n|S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N|s| |n|S|m|
|s|M|n|S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N|s| |n|S|m|
|s|M|n|S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | |n|S|m|
| |M|n|S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | |n|S|m|
| |M|n|S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | |n|S|m|
| |M|n|S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | |n|S|m|
| |M|n|S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | |n|S|m|
| |M|n|S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | |n|S|m|
| |M|n|S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | |n|S|m|
| |M|n|S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | |n|S|m|
| |M|n|S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | |n|S|m|
| |M|n|S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | |n|S|m|
| |M|n|S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | |n|S|m|
| |M|n|S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | |n|S|m|
| |M|n|S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | |n|S|m|
| |M| |S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | |n|S|m|
| |M| |S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | |n|S|m|
| |M| |S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | |n|S|m|
| |M| |S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | |n|S|m|
| |M| |S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | |n|S|m|
| |M| |S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | |n|S|m|
| |M| |S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | |n|S|m|
| |M| |S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | |n|S|m|
| |M| |S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | |n|S|m|
| |M| |S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | |n|S|m|
| |M| |S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | |n|S|m|
| |M| |S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | |n|S|m|
| |M| |S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | |n|S|m|
| |M| |S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | |n|S|m|
| |M| |S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | |n|S|m|
| |M| |S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | |n|S|m|
| |M| |S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | |n|S|m|
| |M| |S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | |n|S|m|
| |M| |S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | |n|S|m|
| |M| |S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | |n|S|m|
| |M| |S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | |n|S|m|
| |M| |S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | |n|S|m|
| |M| |S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | |n|S|m|
| |M| |S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | |n|S|m|
| |M| |S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | |n|S|m|
| |M| |S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | |n|S|m|
| |M| |S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | |n|S|m|
| |M| |S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | |n|S|m|
| |M| |S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | |n|S|m|
| |M| |S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | |n|S|m|
| |M| |S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | |n|S|m|
| |M| |S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | |n|S|m|
| |M| |S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | |n|S|m|
| |M| |S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | |n|S|m|
| |M| |S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | |n|S|m|
| |M| |S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | |n|S|m|
| |M| |S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | |n|S|m|
| |M| |S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | |n|S|m|
| |M| |S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | |n|S|m|
| |M| |S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | |n|S|m|
| |M| |S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | |n|S|m|
| |M| |S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | |n|S|m|
| |M| |S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | |n|S|m|
| |M| |S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | |n|S|m|
| |M| |S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | |n|S|m|
| |M| |S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | |n|S|m|
| |M| |S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | |n|S|m|
| |M| |S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | |n|S|m|
| |M| |S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | |n|S|m|
| |M| |S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | |n|S|m|
| |M| |S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | |n|S|m|
| |M| |S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | |n|S|m|
| |M| |S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | |n|S|m|
| |M| |S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | |n|S|m|
| |M| |S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | |n|S|m|
| |M| |S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | |n|S|m|
| |M| |S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | |n|S|m|
| |M| |S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | |n|S|m|
| |M| |S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | |n|S|m|
| |M| |S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | |n|S|m|
| |M| |S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | |n|S|m|
| |M| |S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | |n|S|m|
| |M| |S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | |n|S|m|
| |M| |S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | |n|S|m|
| |M| |S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | |n|S|m|
| |M| |S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | |n|S|m|
| |M| |S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | |n|S|m|
| |M| |S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | |n|S|m|
| |M| |S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S|m|
| |M| |S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S|m|
| |M| |S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S|m|
| |M| |S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S|m|
| |M| |S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S|m|
| |M| |S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S|m|
| |M| |S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S|m|
| |M| |S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S|m|
| |M| |S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S|m|
| |M| |S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S|m|
| |M| |S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S|m|
| |M| |S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S|m|
| |M| |S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S|m|
| |M| |S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S|m|
| |M| |S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S|m|
| |M| |S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S|m|
| |M| |S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S|m|
| |M| |S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S|m|
| |M| |S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S|m|
| |M| |S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S|m|
| |M| |S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S|m|
| |M| |S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S|m|
| |M| |S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S|m|
| |M| |S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S|m|
| |M| |S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S|m|
| |M| |S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S|m|
| |M| |S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S|m|
| |M| |S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S|m|
| |M| |S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S|m|
| |M| |S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S|m|
| |M| |S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S|m|
| |M| |S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S|m|
| |M| |S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S|m|
| |M| |S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S|m|
| |M| |S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S|m|
| |M| |S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S|m|
| |M| |S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S|m|
| |M| |S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S|m|
| |M| |S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S|m|
| |M| |S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S|m|
| |M| |S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S|m|
| |M| |S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S|m|
| |M| |S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S|m|
| |M| |S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S|m|
| |M| |S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S|m|
| |M| |S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S|m|
| |M| |S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S|m|
| |M| |S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S|m|
| |M| |S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S|m|
| |M| |S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S|m|
| |M| |S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S|m|
| |M| |S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S|m|
| |M| |S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S|m|
| |M| |S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S|m|
| |M| |S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S|m|
| |M| |S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S|m|
| |M| |S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S|m|
| |M| |S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S|m|
| |M| |S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S|m|
| |M| |S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S|m|
| |M| |S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S|m|
| |M| |S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S|m|
| |M| |S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S|m|
| |M| |S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S|m|
| |M| |S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S|m|
| |M| |S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S|m|
| |M| |S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S|m|
| |M| |S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S|m|
| |M| |S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S|m|
| |M| |S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S|m|
| |M| |S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S|m|
| |M| |S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S|m|
| |M| |S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S|m|
| |M| |S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S|m|
| |M| |S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S|m|
| |M| |S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S|m|
| |M| |S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S|m|
| |M| |S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S|m|
| |M| |S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S|m|
| |M| |S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S|m|
| |M| |S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S|m|
| |M| |S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S|m|
| |M| |S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S|m|
| |M| |S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S|m|
| |M| |S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S|m|
| |M| |S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S|m|
| |M| |S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S|m|
| |M| |S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S|m|
| |M| |S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S|m|
| |M| |S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S|m|
| |M| |S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S|m|
| |M| |S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S|m|
| |M| |S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S|m|
| |M| |S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S|m|
| |M| |S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S|m|
| |M| |S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S|m|
| |M| |S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S|m|
| |M| |S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S|m|
| |M| |S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S|m|
| |M| |S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S|m|
| |M| |S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S|m|
| |M| |S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S|m|
| |M| |S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S|m|
| |M| |S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S|m|
| |M| |S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S|m|
| |M| |S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S|m|
| |M| |S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S|m|
| |M| |S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S|m|
| |M| |S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S|m|
| |M| |S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S|m|
| |M| |S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S|m|
| |M| |S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S|m|
| |M| |S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S|m|
| |M| |S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S|m|
| |M| |S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S|m|
| |M| |S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S|m|
| |M| |S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S|m|
| |M| |S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S|m|
| |M| |S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S|m|
| |M| |S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S|m|
| |M| |S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S|m|
| |M| |S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S|m|
| |M| |S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S|m|
| |M| |S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S|m|
| |M| |S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S|m|
| |M| |S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S|m|
| |M| |S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S|m|
| |M| |S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S|m|
| |M| |S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S|m|
| |M| |S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S|m|
| |M| |S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S|m|
| |M| |S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S|m|
| |M| |S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S|m|
| |M| |S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S|m|
| |M| |S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S|m|
| |M| |S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S|m|
| |M| |S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S|m|
| |M| |S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S|m|
| |M| |S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S|m|
| |M| |S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S|m|
| |M| |S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S|m|
| |M| |S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S|m|
| |M| |S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S|m|
| |M| |S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S|m|
| |M| |S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S|m|
| |M| |S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S|m|
| |M| |S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S|m|
| |M| |S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S|m|
| |M| |S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S|m|
| |M| |S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S|m|
| |M| |S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S|m|
| |M| |S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S|m|
| |M| |S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S|m|
| |M| |S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S|m|
| |M| |S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S|m|
| |M| |S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S|m|
| |M| |S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S|m|
| |M| |S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S|m|
| |M| |S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S|m|
| |M| |S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S|m|
| |M| |S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S|m|
| |M| |S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S|m|
| |M| |S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S|m|
| |M| |S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S|m|
| |M| |S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S|m|
| |M| |S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S|m|
| |M| |S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S|m|
| |M| |S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S|m|
| |M| |S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S|m|
| |M| |S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S|m|
| |M| |S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S|m|
| |M| |S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S|m|
| |M| |S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S|m|
| |M| |S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S|m|
| |M| |S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S|m|
| |M| |S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S|m|
| |M| |S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S|m|
| |M| |S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S|m|
| |M| |S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S|m|
| |M| |S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S|m|
| |M| |S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S|m|
| |M| |S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S|m|
| |M| |S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S|m|
| |M| |S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S|m|
| |M| |S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S|m|
| |M| |S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S|m|
| |M| |S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S|m|
| |M| |S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S|m|
| |M| |S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S|m|
| |M| |S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S|m|
| |M| |S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S|m|
| |M| |S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S|m|
| |M| |S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S|m|
| |M| |S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S|m|
| |M| |S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S|m|
| |M| |S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S|m|
| |M| |S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S|m|
| |M| |S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S|m|
| |M| |S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S|m|
| |M| |S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S|m|
| |M| |S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S|m|
| |M| |S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S|m|
| |M| |S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S|m|
| |M| |S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S|m|
| |M| |S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S|m|
| |M| |S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S|m|
| |M| |S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S|m|
| |M| |S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S|m|
| |M| |S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S|m|
| |M| |S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S|m|
| |M| |S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S|m|
| |M| |S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S|m|
| |M| |S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S|m|
| |M| |S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S|m|
| |M| |S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S|m|
| |M| |S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S|m|
| |M| |S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S|m|
| |M| |S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S|m|
| |M| |S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S|m|
| |M| |S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S|m|
| |M| |S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S|m|
| |M| |S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S|m|
| |M| |S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S|m|
| |M| |S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S|m|
| |M| |S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S|m|
| |M| |S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S|m|
| |M| |S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S|m|
| |M| |S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S|m|
| |M| |S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S|m|
| |M| |S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S|m|
| |M| |S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S|m|
| |M| |S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S|m|
| |M| |S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S|m|
| |M| |S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S|m|
| |M| |S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S|m|
| |M| |S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S|m|
| |M| |S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S|m|
| |M| |S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S|m|
| |M| |S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S|m|
| |M| |S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S|m|
| |M| |S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S|m|
| |M| |S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S|m|
| |M| |S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S|m|
| |M| |S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S|m|
| |M| |S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S|m|
| |M| |S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S|m|
| |M| |S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S|m|
| |M| |S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S|m|
| |M| |S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S|m|
| |M| |S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S|m|
| |M| |S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S|m|
| |M| |S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S|m|
| |M| |S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S|m|
| |M| |S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S|m|
| |M| |S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S|m|
| |M| |S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S|m|
| |M| |S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S|m|
| |M| |S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S|m|
| |M| |S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S|m|
| |M| |S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S|m|
| |M| |S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S|m|
| |M| |S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S|m|
| |M| |S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S|m|
| |M| |S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S|m|
| |M| |S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S|m|
| |M| |S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S|m|
| |M| |S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S|m|
| |M| |S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S|m|
| |M| |S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S|m|
| |M| |S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S|m|
| |M| |S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S|m|
| |M| |S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S|m|
| |M| |S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S|m|
| |M| |S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S|m|
| |M| |S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S|m|
| |M| |S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S|m|
| |M| |S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S|m|
| |M| |S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S|m|
| |M| |S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S|m|
| |M| |S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S|m|
| |M| |S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S|m|
| |M| |S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S|m|
| |M| |S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S|m|
| |M| |S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S|m|
| |M| |S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S|m|
| |M| |S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S|m|
| |M| |S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S|m|
| |M| |S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S|m|
| |M| |S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S|m|
| |M| |S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S|m|
| |M| |S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S|m|
| |M| |S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S|m|
| |M| |S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S|m|
| |M| |S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S|m|
| |M| |S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S|m|
| |M| |S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S|m|
| |M| |S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S|m|
| |M| |S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S|m|
| |M| |S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S|m|
| |M| |S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S|m|
| |M| |S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S|m|
| |M| |S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S|m|
| |M| |S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S|m|
| |M| |S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S|m|
| |M| |S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S|m|
| |M| |S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S|m|
| |M| |S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S|m|
| |M| |S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S|m|
| |M| |S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S|m|
| |M| |S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S|m|
| |M| |S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S|m|
| |M| |S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S|m|
| |M| |S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S|m|
| |M| |S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S|m|
| |M| |S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S| |
| |M| |S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S| |
| |M| |S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S| |
| |M| |S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S| |
| |M| |S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S| |
| |M| |S|m|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 0
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 0
Trying: gladiator_arena.attack(source, dest)
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S| |
| |M| |S| |N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 1
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 1
Trying: gladiator_arena.attack(source, dest)
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S| |
| |M| |S| |N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 1
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 1
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S| |
| |M| |S| |N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 1
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 1
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S| |
| |M| |S| |N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 1
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 1
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S| |
| |M| |S| |N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 1
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 1
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S| |
| |M| |S| |N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 1
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 1
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S| |
| |M| |S| |N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 1
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 1
Trying: gladiator_arena.attack(source, dest)
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S| |
| |M| |S| |N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 1
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 1
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S| |
| |M| |S| |N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 1
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 1
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S| |
| |M| |S| |N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 1
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 1
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S| |
| |M| |S| |N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 1
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 1
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S| |
| |M| |S| |N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 1
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 1
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S| |
| |M| |S| |N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 1
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 1
Trying: gladiator_arena.attack(source, dest)
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S| |
| |M| |S| |N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 1
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 1
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S| |
| |M| |S| |N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 1
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 1
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S| |
| |M| |S| |N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 1
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 1
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S| |
| |M| |S| |N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 1
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 1
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S| |
| |M| |S| |N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 1
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 1
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S| |
| |M| |S| |N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 1
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 1
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S| |
| |M| |S| |N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 1
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 1
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S| |
| |M| |S| |N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 1
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 1
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S| |
| |M| |S| |N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 1
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 1
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S| |
| |M| |S| |N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 1
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 1
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S| |
| |M| |S| |N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 1
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 1
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S| |
| |M| |S| |N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 1
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 1
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S| |
| |M| |S| |N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 1
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 1
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S| |
| |M| |S| |N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 1
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 1
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S| |
| |M| |S| |N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 1
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 1
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S| |
| |M| |S| |N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 1
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 1
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S| |
| |M| |S| |N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 1
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 1
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S| |
| |M| |S| |N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 1
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 1
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S| |
| |M| |S| |N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 1
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 1
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S| |
| |M| |S| |N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 1
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 1
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S| |
| |M| |S| |N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 1
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 1
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S| |
| |M| |S| |N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 1
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 1
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S| |
| |M| |S| |N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 1
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 1
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S| |
| |M| |S| |N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 1
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 1
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S| |
| |M| |S| |N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 1
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 1
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S| |
| |M| |S| |N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 1
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 1
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S| |
| |M| |S| |N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 1
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 1
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S| |
| |M| |S| |N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 1
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 1
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S| |
| |M| |S| |N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 1
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 1
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S| |
| |M| |S| |N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 1
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 1
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S| |
| |M| |S| |N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 1
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 1
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S| |
| |M| |S| |N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 1
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 1
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S| |
| |M| |S| |N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 1
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 1
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S| |
| |M| |S| |N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 1
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 1
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S| |
| |M| |S| |N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 1
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 1
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S| |
| |M| |S| |N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 1
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 1
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S| |
| |M| |S| |N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 1
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 1
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S| |
| |M| |S| |N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 1
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 1
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S| |
| |M| |S| |N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 1
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 1
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S| |
| |M| |S| |N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 1
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 1
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S| |
| |M| |S| |N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 1
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 1
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S| |
| |M| |S| |N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 1
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 1
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S| |
| |M| |S| |N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 1
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 1
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S| |
| |M| |S| |N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 1
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 1
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S| |
| |M| |S| |N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 1
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 1
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S| |
| |M| |S| |N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 1
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 1
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S| |
| |M| |S| |N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 1
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 1
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S| |
| |M| |S| |N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 1
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 1
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S| |
| |M| |S| |N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 1
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 1
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S| |
| |M| |S| |N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 1
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 1
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S| |
| |M| |S| |N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 1
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 1
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S| |
| |M| |S| |N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 1
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 1
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S| |
| |M| |S| |N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 1
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 1
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S| |
| |M| |S| |N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 1
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 1
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S| |
| |M| |S| |N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 1
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 1
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S| |
| |M| |S| |N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 1
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 1
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S| |
| |M| |S| |N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 1
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 1
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S| |
| |M| |S| |N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 1
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 1
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S| |
| |M| |S| |N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 1
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 1
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S| |
| |M| |S| |N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 1
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 1
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S| |
| |M| |S| |N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 1
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 1
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S| |
| |M| |S| |N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 1
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 1
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S| |
| |M| |S| |N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 1
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 1
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S| |
| |M| |S| |N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 1
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 1
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S| |
| |M| |S| |N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 1
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 1
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S| |
| |M| |S| |N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 1
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 1
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S| |
| |M| |S| |N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 1
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 1
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S| |
| |M| |S| |N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 1
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 1
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S| |
| |M| |S| |N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 1
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 1
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S| |
| |M| |S| |N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 1
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 1
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S| |
| |M| |S| |N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 1
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 1
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S| |
| |M| |S| |N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 1
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 1
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S| |
| |M| |S| |N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 1
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 1
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S| |
| |M| |S| |N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 1
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 1
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S| |
| |M| |S| |N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 1
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 1
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S| |
| |M| |S| |N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 1
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 1
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S| |
| |M| |S| |N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 1
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 1
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S| |
| |M| |S| |N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 1
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 1
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S| |
| |M| |S| |N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 1
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 1
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S| |
| |M| |S| |N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 1
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 1
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S| |
| |M| |S| |N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 1
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 1
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S| |
| |M| |S| |N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 1
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 1
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S| |
| |M| |S| |N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 1
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 1
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S| |
| |M| |S| |N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 1
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 1
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S| |
| |M| |S| |N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 1
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 1
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S| |
| |M| |S| |N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 1
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 1
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S| |
| |M| |S| |N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 1
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 1
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S| |
| |M| |S| |N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 1
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 1
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S| |
| |M| |S| |N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 1
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 1
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S| |
| |M| |S| |N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 1
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 1
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S| |
| |M| |S| |N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 1
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 1
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S| |
| |M| |S| |N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 1
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 1
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S| |
| |M| |S| |N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 1
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 1
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S| |
| |M| |S| |N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 1
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 1
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S| |
| |M| |S| |N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 1
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 1
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S| |
| |M| |S| |N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 1
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 1
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S| |
| |M| |S| |N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 1
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 1
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S| |
| |M| |S| |N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 1
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 1
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S| |
| |M| |S| |N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 1
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 1
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S| |
| |M| |S| |N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 1
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 1
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S| |
| |M| |S| |N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 1
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 1
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S| |
| |M| |S| |N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 1
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 1
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S| |
| |M| |S| |N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 1
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 1
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S| |
| |M| |S| |N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 1
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 1
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S| |
| |M| |S| |N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 1
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 1
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S| |
| |M| |S| |N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 1
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 1
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S| |
| |M| |S| |N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 1
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 1
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S| |
| |M| |S| |N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 1
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 1
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S| |
| |M| |S| |N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 1
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 1
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S| |
| |M| |S| |N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 1
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 1
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S| |
| |M| |S| |N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 1
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 1
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S| |
| |M| |S| |N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 1
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 1
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S| |
| |M| |S| |N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 1
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 1
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S| |
| |M| |S| |N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 1
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 1
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S| |
| |M| |S| |N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 1
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 1
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S| |
| |M| |S| |N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 1
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 1
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S| |
| |M| |S| |N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 1
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 1
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S| |
| |M| |S| |N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 1
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 1
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S| |
| |M| |S| |N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 1
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 1
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S| |
| |M| |S| |N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 1
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 1
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S| |
| |M| |S| |N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 1
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 1
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S| |
| |M| |S| |N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 1
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 1
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S| |
| |M| |S| |N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 1
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 1
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S| |
| |M| |S| |N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 1
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 1
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S| |
| |M| |S| |N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 1
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 1
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S| |
| |M| |S| |N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 1
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 1
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S| |
| |M| |S| |N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 1
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 1
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S| |
| |M| |S| |N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 1
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 1
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S| |
| |M| |S| |N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 1
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 1
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S| |
| |M| |S| |N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 1
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 1
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S| |
| |M| |S| |N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 1
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 1
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S| |
| |M| |S| |N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 1
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 1
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S| |
| |M| |S| |N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 1
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 1
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S| |
| |M| |S| |N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 1
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 1
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S| |
| |M| |S| |N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 1
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 1
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S| |
| |M| |S| |N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 1
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 1
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S| |
| |M| |S| |N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 1
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 1
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S| |
| |M| |S| |N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 1
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 1
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S| |
| |M| |S| |N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 1
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 1
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S| |
| |M| |S| |N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 1
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 1
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S| |
| |M| |S| |N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 1
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 1
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S| |
| |M| |S| |N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 1
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 1
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S| |
| |M| |S| |N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 1
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 1
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S| |
| |M| |S| |N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 1
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 1
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S| |
| |M| |S| |N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 1
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 1
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S| |
| |M| |S| |N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 1
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 1
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S| |
| |M| |S| |N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 1
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 1
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S| |
| |M| |S| |N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 1
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 1
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S| |
| |M| |S| |N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 1
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 1
Trying: gladiator_arena.attack(source, dest)
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S| |
| |M| |S| |N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 1
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 1
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S| |
| |M| |S| |N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 1
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 1
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S| |
| |M| |S| |N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 1
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 1
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S| |
| |M| |S| |N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 1
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 1
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S| |
| |M| |S| |N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 1
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 1
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S| |
| |M| |S| |N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 1
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 1
Trying: gladiator_arena.attack(source, dest)
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S| |
| |M| |S| |N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 1
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 1
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S| |
| |M| |S| |N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 1
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 1
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S| |
| |M| |S| |N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 1
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 1
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S| |
| |M| |S| |N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 1
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 1
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S| |
| |M| |S| |N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 1
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 1
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S| |
| |M| |S| |N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 1
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 1
Trying: gladiator_arena.attack(source, dest)
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S| |
| |M| |S| |N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 1
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 1
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S| |
| |M| |S| |N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 1
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 1
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S| |
| |M| |S| |N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 1
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 1
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S| |
| |M| |S| |N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 1
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 1
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S| |
| |M| |S| |N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 1
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 1
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S| |
| |M| |S| |N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 1
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 1
Trying: gladiator_arena.attack(source, dest)
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S| |
| |M| |S| |N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 1
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 1
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S| |
| |M| |S| |N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 1
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 1
Trying: gladiator_arena.attack(source, dest)
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S| |
| |M| |S| |N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 1
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 1
Trying: gladiator_arena.attack(source, dest)
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S| |
| |M| |S| |N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 1
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 1
Trying: gladiator_arena.attack(source, dest)
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S| |
| |M| |S| |N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 1
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 1
Trying: gladiator_arena.attack(source, dest)
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S| |
| |M| |S| |N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 1
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 1
Trying: gladiator_arena.attack(source, dest)
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S| |
| |M| |S| |N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 1
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 1
Trying: gladiator_arena.attack(source, dest)
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S| |
| |M| |S| |N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 1
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 1
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S| |
| |M| |S| |N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 1
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 1
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S| |
| |M| |S| |N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 1
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 1
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S| |
| |M| |S| |N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 1
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 1
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S| |
| |M| |S| |N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 1
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 1
Trying: gladiator_arena.attack(source, dest)
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S| |
| |M| |S| |N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 1
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 1
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S| |
| |M| |S| |N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 1
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 1
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S| |
| |M| |S| |N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 1
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 1
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S| |
| |M| |S| |N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 1
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 1
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S| |
| |M| |S| |N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 1
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 1
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S| |
| |M| |S| |N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 1
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 1
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S| |
| |M| |S| |N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 1
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 1
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S| |
| |M| |S| |N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 1
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 1
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S| |
| |M| |S| |N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 1
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 1
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S| |
| |M| |S| |N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 1
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 1
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S| |
| |M| |S| |N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 1
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 1
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S| |
| |M| |S| |N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 1
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 1
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S| |
| |M| |S| |N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 1
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 1
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S| |
| |M| |S| |N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 1
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 1
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S| |
| |M| |S| |N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 1
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 1
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S| |
| |M| |S| |N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 1
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 1
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S| |
| |M| |S| |N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 1
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 1
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S| |
| |M| |S| |N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 1
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 1
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S| |
| |M| |S| |N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 1
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 1
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S| |
| |M| |S| |N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 1
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 1
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S| |
| |M| |S| |N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 1
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 1
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S| |
| |M| |S| |N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 1
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 1
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S| |
| |M| |S| |N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 1
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 1
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S| |
| |M| |S| |N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 1
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 1
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S| |
| |M| |S| |N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 1
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 1
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S| |
| |M| |S| |N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 1
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 1
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S| |
| |M| |S| |N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 1
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 1
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S| |
| |M| |S| |N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 1
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 1
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S| |
| |M| |S| |N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 1
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 1
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S| |
| |M| |S| |N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 1
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 1
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S| |
| |M| |S| |N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 1
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 1
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S| |
| |M| |S| |N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 1
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 1
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S| |
| |M| |S| |N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 1
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 1
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S| |
| |M| |S| |N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 1
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 1
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S| |
| |M| |S| |N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 1
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 1
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S| |
| |M| |S| |N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 1
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 1
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S| |
| |M| |S| |N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 1
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 1
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S| |
| |M| |S| |N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 1
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 1
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S| |
| |M| |S| |N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 1
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 1
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S| |
| |M| |S| |N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 1
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 1
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S| |
| |M| |S| |N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 1
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 1
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S| |
| |M| |S| |N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 1
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 1
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S| |
| |M| |S| |N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 1
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 1
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S| |
| |M| |S| |N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 1
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 1
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S| |
| |M| |S| |N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 1
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 1
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S| |
| |M| |S| |N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 1
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 1
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S| |
| |M| |S| |N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 1
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 1
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S| |
| |M| |S| |N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 1
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 1
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S| |
| |M| |S| |N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 1
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 1
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S| |
| |M| |S| |N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 1
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 1
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S| |
| |M| |S| |N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 1
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 1
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S| |
| |M| |S| |N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 1
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 1
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S| |
| |M| |S| |N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 1
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 1
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S| |
| |M| |S| |N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 1
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 1
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S| |
| |M| |S| |N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 1
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 1
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S| |
| |M| |S| |N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 1
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 1
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S| |
| |M| |S| |N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 1
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 1
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S| |
| |M| |S| |N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 1
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 1
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S| |
| |M| |S| |N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 1
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 1
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S| |
| |M| |S| |N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 1
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 1
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S| |
| |M| |S| |N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 1
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 1
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S| |
| |M| |S| |N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 1
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 1
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S| |
| |M| |S| |N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 1
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 1
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S| |
| |M| |S| |N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 1
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 1
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S| |
| |M| |S| |N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 1
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 1
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S| |
| |M| |S| |N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 1
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 1
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S| |
| |M| |S| |N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 1
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 1
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S| |
| |M| |S| |N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 1
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 1
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S| |
| |M| |S| |N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 1
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 1
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S| |
| |M| |S| |N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 1
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 1
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S| |
| |M| |S| |N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 1
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 1
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S| |
| |M| |S| |N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 1
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 1
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S| |
| |M| |S| |N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 1
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 1
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S| |
| |M| |S| |N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 1
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 1
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S| |
| |M| |S| |N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 1
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 1
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S| |
| |M| |S| |N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 1
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 1
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S| |
| |M| |S| |N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 1
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 1
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S| |
| |M| |S| |N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 1
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 1
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S| |
| |M| |S| |N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 1
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 1
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S| |
| |M| |S| |N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 1
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 1
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S| |
| |M| |S| |N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 1
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 1
Trying: gladiator_arena.attack(source, dest)
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S| |
| |M| |S| |N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 1
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 1
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S| |
| |M| |S| |N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 1
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 1
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S| |
| |M| |S| |N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 1
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 1
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S| |
| |M| |S| |N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 1
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 1
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S| |
| |M| |S| |N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 1
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 1
Trying: gladiator_arena.attack(source, dest)
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S| |
| |M| |S| |N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 1
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 1
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S| |
| |M| |S| |N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 1
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 1
Trying: gladiator_arena.attack(source, dest)
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S| |
| |M| |S| |N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 1
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 1
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S| |
| |M| |S| |N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 1
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 1
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S| |
| |M| |S| |N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 1
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 1
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S| |
| |M| |S| |N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 1
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 1
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S| |
| |M| |S| |N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 1
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 1
Trying: gladiator_arena.attack(source, dest)
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S| |
| |M| |S| |N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 1
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 1
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S| |
| |M| |S| |N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 1
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 1
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S| |
| |M| |S| |N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 1
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 1
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S| |
| |M| |S| |N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 1
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 1
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S| |
| |M| |S| |N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 1
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 1
Trying: gladiator_arena.attack(source, dest)
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S| |
| |M| |S| |N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 1
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 1
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S| |
| |M| |S| |N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 1
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 1
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S| |
| |M| |S| |N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 1
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 1
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S| |
| |M| |S| |N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 1
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 1
Trying: gladiator_arena.attack(source, dest)
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S| |
| |M| |S| |N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 1
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 1
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S| |
| |M| |S| |N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 1
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 1
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S| |
| |M| |S| |N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 1
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 1
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S| |
| |M| |S| |N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 1
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 1
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S| |
| |M| |S| |N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 1
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 1
Trying: gladiator_arena.attack(source, dest)
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S| |
| |M| |S| |N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 1
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 1
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S| |
| |M| |S| |N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 1
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 1
Trying: gladiator_arena.attack(source, dest)
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S| |
| |M| |S| |N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 1
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 1
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S| |
| |M| |S| |N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 1
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 1
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S| |
| |M| |S| |N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 1
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 1
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S| |
| |M| |S| |N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 1
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 1
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S| |
| |M| |S| |N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 1
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 1
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S| |
| |M| |S| |N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 1
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 1
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S| |
| |M| |S| |N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 1
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 1
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S| |
| |M| |S| |N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 1
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 1
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S| |
| |M| |S| |N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 1
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 1
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S| |
| |M| |S| |N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 1
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 1
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S| |
| |M| |S| |N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 1
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 1
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S| |
| |M| |S| |N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 1
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 1
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S| |
| |M| |S| |N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 1
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 1
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S| |
| |M| |S| |N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 1
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 1
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S| |
| |M| |S| |N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 1
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 1
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S| |
| |M| |S| |N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 1
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 1
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S| |
| |M| |S| |N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 1
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 1
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S| |
| |M| |S| |N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 1
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 1
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S| |
| |M| |S| |N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 1
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 1
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S| |
| |M| |S| |N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 1
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 1
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S| |
| |M| |S| |N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 1
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 1
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S| |
| |M| |S| |N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 1
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 1
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S| |
| |M| |S| |N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 1
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 1
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S| |
| |M| |S| |N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 1
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 1
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S| |
| |M| |S| |N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 1
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 1
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S| |
| |M| |S| |N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 1
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 1
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S| |
| |M| |S| |N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 1
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 1
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S| |
| |M| |S| |N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 1
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 1
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S| |
| |M| |S| |N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 1
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 1
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S| |
| |M| |S| |N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 1
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 1
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S| |
| |M| |S| |N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 1
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 1
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S| |
| |M| |S| |N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 1
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 1
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S| |
| |M| |S| |N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 1
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 1
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S| |
| |M| |S| |N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 1
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 1
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S| |
| |M| |S| |N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 1
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 1
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S| |
| |M| |S| |N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 1
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 1
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S| |
| |M| |S| |N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 1
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 1
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S| |
| |M| |S| |N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 1
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 1
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S| |
| |M| |S| |N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 1
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 1
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S| |
| |M| |S| |N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 1
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 1
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S| |
| |M| |S| |N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 1
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 1
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S| |
| |M| |S| |N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 1
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 1
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S| |
| |M| |S| |N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 1
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 1
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S| |
| |M| |S| |N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 1
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 1
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S| |
| |M| |S| |N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 1
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 1
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S| |
| |M| |S| |N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 1
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 1
Trying: gladiator_arena.attack(source, dest)
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S| |
| |M| |S| |N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 1
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 1
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S| |
| |M| |S| |N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 1
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 1
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S| |
| |M| |S| |N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 1
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 1
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S| |
| |M| |S| |N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 1
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 1
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S| |
| |M| |S| |N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 1
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 1
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S| |
| |M| |S| |N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 1
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 1
Trying: gladiator_arena.attack(source, dest)
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S| |
| |M| |S| |N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 1
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 1
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S| |
| |M| |S| |N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 1
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 1
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S| |
| |M| |S| |N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 1
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 1
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S| |
| |M| |S| |N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 1
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 1
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S| |
| |M| |S| |N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 1
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 1
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S| |
| |M| |S| |N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 1
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 1
Trying: gladiator_arena.attack(source, dest)
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S| |
| |M| |S| |N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 1
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 1
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S| |
| |M| |S| |N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 1
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 1
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S| |
| |M| |S| |N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 1
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 1
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S| |
| |M| |S| |N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 1
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 1
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S| |
| |M| |S| |N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 1
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 1
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S| |
| |M| |S| |N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 1
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 1
Trying: gladiator_arena.attack(source, dest)
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S| |
| |M| |S| |N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 1
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 1
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S| |
| |M| |S| |N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 1
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 1
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S| |
| |M| |S| |N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 1
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 1
Trying: gladiator_arena.attack(source, dest)
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S| |
| |M| |S| |N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 1
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 1
Trying: gladiator_arena.attack(source, dest)
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S| |
| |M| |S| |N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 1
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 1
Trying: gladiator_arena.attack(source, dest)
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S| |
| |M| |S| |N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 1
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 1
Trying: gladiator_arena.attack(source, dest)
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S| |
| |M| |S| |N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 1
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 1
Trying: gladiator_arena.attack(source, dest)
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S| |
| |M| |S| |N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 1
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 1
Trying: gladiator_arena.attack(source, dest)
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S| |
| |M| |S| |N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 1
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 1
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S| |
| |M| |S| |N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 1
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 1
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S| |
| |M| |S| |N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 1
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 1
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S| |
| |M| |S| |N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 1
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 1
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S| |
| |M| |S| |N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 1
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 1
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S| |
| |M| |S| |N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 1
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 1
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S| |
| |M| |S| |N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 1
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 1
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S| |
| |M| |S| |N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 1
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 1
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S| |
| |M| |S| |N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 1
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 1
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S| |
| |M| |S| |N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 1
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 1
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S| |
| |M| |S| |N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 1
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 1
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S| |
| |M| |S| |N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 1
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 1
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S| |
| |M| |S| |N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 1
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 1
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S| |
| |M| |S| |N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 1
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 1
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S| |
| |M| |S| |N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 1
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 1
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S| |
| |M| |S| |N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 1
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 1
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S| |
| |M| |S| |N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 1
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 1
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S| |
| |M| |S| |N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 1
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 1
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S| |
| |M| |S| |N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 1
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 1
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S| |
| |M| |S| |N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 1
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 1
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S| |
| |M| |S| |N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 1
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 1
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S| |
| |M| |S| |N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 1
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 1
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S| |
| |M| |S| |N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 1
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 1
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S| |
| |M| |S| |N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 1
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 1
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S| |
| |M| |S| |N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 1
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 1
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S| |
| |M| |S| |N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 1
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 1
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S| |
| |M| |S| |N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 1
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 1
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S| |
| |M| |S| |N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 1
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 1
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S| |
| |M| |S| |N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 1
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 1
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S| |
| |M| |S| |N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 1
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 1
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S| |
| |M| |S| |N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 1
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 1
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S| |
| |M| |S| |N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 1
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 1
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S| |
| |M| |S| |N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 1
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 1
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S| |
| |M| |S| |N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 1
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 1
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S| |
| |M| |S| |N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 1
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 1
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S| |
| |M| |S| |N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 1
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 1
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S| |
| |M| |S| |N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 1
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 1
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S| |
| |M| |S| |N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 1
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 1
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S| |
| |M| |S| |N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 1
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 1
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S| |
| |M| |S| |N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 1
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 1
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S| |
| |M| |S| |N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 1
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 1
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S| |
| |M| |S| |N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 1
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 1
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S| |
| |M| |S| |N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 1
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 1
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S| |
| |M| |S| |N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 1
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 1
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S| |
| |M| |S| |N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 1
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 1
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S| |
| |M| |S| |N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 1
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 1
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S| |
| |M| |S| |N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 1
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 1
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S| |
| |M| |S| |N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 1
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 1
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S| |
| |M| |S| |N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 1
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 1
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S| |
| |M| |S| |N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 1
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 1
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S| |
| |M| |S| |N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 1
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 1
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S| |
| |M| |S| |N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 1
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 1
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S| |
| |M| |S| |N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 1
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 1
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S| |
| |M| |S| |N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 1
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 1
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S| |
| |M| |S| |N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 1
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 1
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S| |
| |M| |S| |N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 1
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 1
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S| |
| |M| |S| |N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 1
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 1
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S| |
| |M| |S| |N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 1
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 1
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S| |
| |M| |S| |N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 1
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 1
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S| |
| |M| |S| |N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 1
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 1
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S| |
| |M| |S| |N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 1
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 1
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S| |
| |M| |S| |N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 1
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 1
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S| |
| |M| |S| |N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 1
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 1
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S| |
| |M| |S| |N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 1
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 1
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S| |
| |M| |S| |N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 1
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 1
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S| |
| |M| |S| |N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 1
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 1
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S| |
| |M| |S| |N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 1
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 1
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S| |
| |M| |S| |N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 1
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 1
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S| |
| |M| |S| |N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 1
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 1
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S| |
| |M| |S| |N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 1
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 1
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S| |
| |M| |S| |N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 1
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 1
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S| |
| |M| |S| |N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 1
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 1
Trying: gladiator_arena.attack(source, dest)
std::exception
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S| |
| |M| |S| |N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 1
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 1
GENERATING ULTRA_MEGA_SUPER_MEDIC!!
                                                                                            
8 8888      88 8 8888   8888888 8888888888 8 888888888o.            .8.                     
8 8888      88 8 8888         8 8888       8 8888    `88.          .888.                    
8 8888      88 8 8888         8 8888       8 8888     `88         :88888.                   
8 8888      88 8 8888         8 8888       8 8888     ,88        . `88888.                  
8 8888      88 8 8888         8 8888       8 8888.   ,88'       .8. `88888.                 
8 8888      88 8 8888         8 8888       8 888888888P'       .8`8. `88888.                
8 8888      88 8 8888         8 8888       8 8888`8b          .8' `8. `88888.               
` 8888     ,8P 8 8888         8 8888       8 8888 `8b.       .8'   `8. `88888.              
  8888   ,d8P  8 8888         8 8888       8 8888   `8b.    .888888888. `88888.             
   `Y88888P'   8 888888888888 8 8888       8 8888     `88. .8'       `8. `88888.            
          .         .                                                                       
         ,8.       ,8.          8 8888888888       ,o888888o.          .8.                  
        ,888.     ,888.         8 8888            8888     `88.       .888.                 
       .`8888.   .`8888.        8 8888         ,8 8888       `8.     :88888.                
      ,8.`8888. ,8.`8888.       8 8888         88 8888              . `88888.               
     ,8'8.`8888,8^8.`8888.      8 888888888888 88 8888             .8. `88888.              
    ,8' `8.`8888' `8.`8888.     8 8888         88 8888            .8`8. `88888.             
   ,8'   `8.`88'   `8.`8888.    8 8888         88 8888   8888888 .8' `8. `88888.            
  ,8'     `8.`'     `8.`8888.   8 8888         `8 8888       .8'.8'   `8. `88888.           
 ,8'       `8        `8.`8888.  8 8888            8888     ,88'.888888888. `88888.          
,8'         `         `8.`8888. 8 888888888888     `8888888P' .8'       `8. `88888.         
                                                                                            
   d888888o.   8 8888      88 8 888888888o   8 8888888888   8 888888888o.                   
 .`8888:' `88. 8 8888      88 8 8888    `88. 8 8888         8 8888    `88.                  
 8.`8888.   Y8 8 8888      88 8 8888     `88 8 8888         8 8888     `88                  
 `8.`8888.     8 8888      88 8 8888     ,88 8 8888         8 8888     ,88                  
  `8.`8888.    8 8888      88 8 8888.   ,88' 8 888888888888 8 8888.   ,88'                  
   `8.`8888.   8 8888      88 8 888888888P'  8 8888         8 888888888P'                   
    `8.`8888.  8 8888      88 8 8888         8 8888         8 8888`8b                       
8b   `8.`8888. ` 8888     ,8P 8 8888         8 8888         8 8888 `8b.                     
`8b.  ;8.`8888   8888   ,d8P  8 8888         8 8888         8 8888   `8b.                   
 `Y8888P ,88P'    `Y88888P'   8 8888         8 888888888888 8 8888     `88.                 
          .         .                                                                       
         ,8.       ,8.          8 8888888888   8 888888888o.       8 8888     ,o888888o.    
        ,888.     ,888.         8 8888         8 8888    `^888.    8 8888    8888     `88.  
       .`8888.   .`8888.        8 8888         8 8888        `88.  8 8888 ,8 8888       `8. 
      ,8.`8888. ,8.`8888.       8 8888         8 8888         `88  8 8888 88 8888           
     ,8'8.`8888,8^8.`8888.      8 888888888888 8 8888          88  8 8888 88 8888           
    ,8' `8.`8888' `8.`8888.     8 8888         8 8888          88  8 8888 88 8888           
   ,8'   `8.`88'   `8.`8888.    8 8888         8 8888         ,88  8 8888 88 8888           
  ,8'     `8.`'     `8.`8888.   8 8888         8 8888        ,88'  8 8888 `8 8888       .8' 
 ,8'       `8        `8.`8888.  8 8888         8 8888    ,o88P'    8 8888    8888     ,88'  
,8'         `         `8.`8888. 8 888888888888 8 888888888P'       8 8888     `8888888P'    
ULTRA_MEGA_SUPER_MEDIC :"You have killed my brothers. Prepare to die."
*************
|M| | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S| |
| |M| |S| |N|
*************ULTRA_MEGA_SUPER_MEDIC has spawned in (0,0)!
*************
| | | | |N| |
| |S| |N| | |
|S| |N| | | |
| |N| | | |S|
|N| | | |S| |
| |M| |S|M|N|
*************Trying: std::cout << "isOver: " << gladiator_arena.isOver(&winning_team) << std::endl
isOver: 1
Trying: std::cout << "is cpp the winning team? " << (winning_team == Team::CPP) << std::endl
is cpp the winning team? 1
0 - Create Game
1 - Destroy Game
2 - Copy Game
3 - Assign Game
4 - Add Character
5 - Make Character
6 - Move
7 - Attack
8 - Reload
9 - Is over
10 - Print Game
11 - Run test cases
12 - Quit
Please select option: 